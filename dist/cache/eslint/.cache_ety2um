[{"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\404.js":"1","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\api\\hello.js":"2","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\forget-password.js":"3","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\sign-in.js":"4","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\sign-up.js":"5","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\clientes.tsx":"6","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\accordions.js":"7","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\anuncios\\anuncio1.tsx":"8","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\adorno.tsx":"9","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\anuncio.tsx":"10","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\banner.tsx":"11","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\footer.tsx":"12","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\formulario.tsx":"13","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\navbar.tsx":"14","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\plano.tsx":"15","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\top.tsx":"16","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\ubicacion.tsx":"17","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\videosinfo.tsx":"18","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\FacebookShare.tsx":"19","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\footer\\footer1.tsx":"20","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\footer\\footer2.tsx":"21","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\contactanos.tsx":"22","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\info.tsx":"23","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\infodata.tsx":"24","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\pagebardump.tsx":"25","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\menus\\menus1.tsx":"26","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\menus\\menutop.tsx":"27","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\nosotros\\nosotros.tsx":"28","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\categorias.tsx":"29","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\recientes.tsx":"30","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\ver.tsx":"31","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\buscador.tsx":"32","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectos1.tsx":"33","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectoslist.tsx":"34","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectosresultado.tsx":"35","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\slider.tsx":"36","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\verproyectos.tsx":"37","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\vista1.tsx":"38","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\vista2.tsx":"39","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\publicidad\\listado.tsx":"40","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\redes-sociales\\redes1.tsx":"41","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\redes-sociales\\share.tsx":"42","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\animacion.tsx":"43","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\anuncios.tsx":"44","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\auspiciadores.tsx":"45","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\tools\\paginacion.tsx":"46","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\top1.tsx":"47","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\top2.tsx":"48","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\topInterno.tsx":"49","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\WhatsappShare.tsx":"50","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb\\crudbanner.tsx":"51","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb\\infobanner.tsx":"52","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb.tsx":"53","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannervs.tsx":"54","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\carrousel\\Inicio.tsx":"55","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\carrousel\\Paginas.tsx":"56","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\contactame.tsx":"57","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa\\crudempresa.tsx":"58","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa\\infoeditable.tsx":"59","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa.tsx":"60","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs\\crudempresavs.tsx":"61","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs\\infoempresavs.tsx":"62","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs.tsx":"63","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion\\crudservicio.tsx":"64","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion\\servicioeditable.tsx":"65","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion.tsx":"66","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs\\crudinfo.tsx":"67","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs\\informacionvs.tsx":"68","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs.tsx":"69","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\menus.js":"70","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\navBar.tsx":"71","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\navBarvs.tsx":"72","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\page.js":"73","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\plano.tsx":"74","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\planovs.tsx":"75","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\crudtexto.tsx":"76","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\textoeditable.tsx":"77","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\toolbar.js":"78","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline.tsx":"79","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs\\crudtimeline.tsx":"80","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs\\infotimeline.tsx":"81","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs.tsx":"82","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion\\crudubicacion.tsx":"83","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion\\infoubicacion.tsx":"84","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion.tsx":"85","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs\\crudubicacion.tsx":"86","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs\\infoubicacion.tsx":"87","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs.tsx":"88","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\empresa.tsx":"89","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\garzablanca.tsx":"90","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\index.tsx":"91","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\informacion.tsx":"92","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\layout.js":"93","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\noticias.tsx":"94","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\profile.js":"95","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\settings.js":"96","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\test.tsx":"97","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\test2.tsx":"98","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\plano.tsx":"99","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\proyectos.tsx":"100","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\servicios.tsx":"101","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\timeline.tsx":"102","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\ubicacion.tsx":"103","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\adorno.tsx":"104","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\anuncio.tsx":"105","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\banner.tsx":"106","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\formulario.tsx":"107","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\navbar.tsx":"108","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\plano.tsx":"109","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\top.tsx":"110","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\ubicacion.tsx":"111","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\videosinfo.tsx":"112","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\empresa.tsx":"113","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\informacion.tsx":"114","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\plano.tsx":"115","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\timeline.tsx":"116","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\ubicacion.tsx":"117","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan.tsx":"118","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\_app.js":"119","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\_document.js":"120","D:\\PROYECTO_TEST\\compratulote-garzablanca\\components\\bootstrap\\DotBadge.js":"121"},{"size":907,"mtime":1705610494200,"results":"122","hashOfConfig":"123"},{"size":170,"mtime":1686471504000,"results":"124","hashOfConfig":"123"},{"size":1769,"mtime":1703845817832,"results":"125","hashOfConfig":"123"},{"size":2916,"mtime":1703845756073,"results":"126","hashOfConfig":"123"},{"size":3794,"mtime":1703845790376,"results":"127","hashOfConfig":"123"},{"size":2487,"mtime":1703622722211,"results":"128","hashOfConfig":"123"},{"size":9183,"mtime":1704292944568,"results":"129","hashOfConfig":"123"},{"size":912,"mtime":1703613708680,"results":"130","hashOfConfig":"123"},{"size":896,"mtime":1705703196813,"results":"131","hashOfConfig":"123"},{"size":1550,"mtime":1705657456844,"results":"132","hashOfConfig":"123"},{"size":3164,"mtime":1705929496317,"results":"133","hashOfConfig":"123"},{"size":632,"mtime":1704913460664,"results":"134","hashOfConfig":"123"},{"size":4513,"mtime":1705345535592,"results":"135","hashOfConfig":"123"},{"size":1725,"mtime":1706400048299,"results":"136","hashOfConfig":"123"},{"size":19354,"mtime":1706134410990,"results":"137","hashOfConfig":"123"},{"size":3606,"mtime":1706399141710,"results":"138","hashOfConfig":"123"},{"size":5385,"mtime":1706403892767,"results":"139","hashOfConfig":"123"},{"size":3159,"mtime":1705639586406,"results":"140","hashOfConfig":"123"},{"size":565,"mtime":1705340129663,"results":"141","hashOfConfig":"123"},{"size":759,"mtime":1703601168697,"results":"142","hashOfConfig":"123"},{"size":1387,"mtime":1703619391629,"results":"143","hashOfConfig":"123"},{"size":3250,"mtime":1702335555225,"results":"144","hashOfConfig":"123"},{"size":447,"mtime":1702335555226,"results":"145","hashOfConfig":"123"},{"size":1488,"mtime":1702489249618,"results":"146","hashOfConfig":"123"},{"size":996,"mtime":1702480062090,"results":"147","hashOfConfig":"123"},{"size":784,"mtime":1704251576670,"results":"148","hashOfConfig":"123"},{"size":2128,"mtime":1703621522114,"results":"149","hashOfConfig":"123"},{"size":1224,"mtime":1703600610267,"results":"150","hashOfConfig":"123"},{"size":1339,"mtime":1704230535176,"results":"151","hashOfConfig":"123"},{"size":2396,"mtime":1704230595381,"results":"152","hashOfConfig":"123"},{"size":2488,"mtime":1703621437827,"results":"153","hashOfConfig":"123"},{"size":3318,"mtime":1703603342236,"results":"154","hashOfConfig":"123"},{"size":4226,"mtime":1704227267076,"results":"155","hashOfConfig":"123"},{"size":2392,"mtime":1704227520866,"results":"156","hashOfConfig":"123"},{"size":3459,"mtime":1704218217879,"results":"157","hashOfConfig":"123"},{"size":2192,"mtime":1703622345305,"results":"158","hashOfConfig":"123"},{"size":1071,"mtime":1703602041852,"results":"159","hashOfConfig":"123"},{"size":2057,"mtime":1704227574218,"results":"160","hashOfConfig":"123"},{"size":2705,"mtime":1704227680986,"results":"161","hashOfConfig":"123"},{"size":1463,"mtime":1703624143628,"results":"162","hashOfConfig":"123"},{"size":1134,"mtime":1704254898187,"results":"163","hashOfConfig":"123"},{"size":1479,"mtime":1703620449567,"results":"164","hashOfConfig":"123"},{"size":2438,"mtime":1704237650594,"results":"165","hashOfConfig":"123"},{"size":713,"mtime":1704232588901,"results":"166","hashOfConfig":"123"},{"size":1867,"mtime":1703610849731,"results":"167","hashOfConfig":"123"},{"size":577,"mtime":1704227446163,"results":"168","hashOfConfig":"123"},{"size":539,"mtime":1704253383169,"results":"169","hashOfConfig":"123"},{"size":1114,"mtime":1703617066013,"results":"170","hashOfConfig":"123"},{"size":1161,"mtime":1704231632401,"results":"171","hashOfConfig":"123"},{"size":1241,"mtime":1705336529629,"results":"172","hashOfConfig":"123"},{"size":13838,"mtime":1705593938336,"results":"173","hashOfConfig":"123"},{"size":4195,"mtime":1705595407577,"results":"174","hashOfConfig":"123"},{"size":3148,"mtime":1705595754564,"results":"175","hashOfConfig":"123"},{"size":17795,"mtime":1705605643095,"results":"176","hashOfConfig":"123"},{"size":4752,"mtime":1704838004234,"results":"177","hashOfConfig":"123"},{"size":13010,"mtime":1704217035450,"results":"178","hashOfConfig":"123"},{"size":14651,"mtime":1706136064758,"results":"179","hashOfConfig":"123"},{"size":9252,"mtime":1705657690562,"results":"180","hashOfConfig":"123"},{"size":11880,"mtime":1705655373659,"results":"181","hashOfConfig":"123"},{"size":3574,"mtime":1705654451833,"results":"182","hashOfConfig":"123"},{"size":9265,"mtime":1705616157842,"results":"183","hashOfConfig":"123"},{"size":11880,"mtime":1705616109541,"results":"184","hashOfConfig":"123"},{"size":3588,"mtime":1705583617089,"results":"185","hashOfConfig":"123"},{"size":13340,"mtime":1704906462952,"results":"186","hashOfConfig":"123"},{"size":14793,"mtime":1705929097487,"results":"187","hashOfConfig":"123"},{"size":3800,"mtime":1705694588151,"results":"188","hashOfConfig":"123"},{"size":13336,"mtime":1705615461731,"results":"189","hashOfConfig":"123"},{"size":14891,"mtime":1705696261283,"results":"190","hashOfConfig":"123"},{"size":3200,"mtime":1705696081264,"results":"191","hashOfConfig":"123"},{"size":1158,"mtime":1703884563496,"results":"192","hashOfConfig":"123"},{"size":13774,"mtime":1705701134473,"results":"193","hashOfConfig":"123"},{"size":13299,"mtime":1705700923713,"results":"194","hashOfConfig":"123"},{"size":3535,"mtime":1703494526000,"results":"195","hashOfConfig":"123"},{"size":19018,"mtime":1706321586479,"results":"196","hashOfConfig":"123"},{"size":19073,"mtime":1706189523154,"results":"197","hashOfConfig":"123"},{"size":7504,"mtime":1705931741793,"results":"198","hashOfConfig":"123"},{"size":8681,"mtime":1705931807560,"results":"199","hashOfConfig":"123"},{"size":419,"mtime":1705659368681,"results":"200","hashOfConfig":"123"},{"size":3873,"mtime":1704838110115,"results":"201","hashOfConfig":"123"},{"size":7524,"mtime":1705609193560,"results":"202","hashOfConfig":"123"},{"size":8670,"mtime":1705609206862,"results":"203","hashOfConfig":"123"},{"size":3949,"mtime":1705609317402,"results":"204","hashOfConfig":"123"},{"size":19051,"mtime":1706135449120,"results":"205","hashOfConfig":"123"},{"size":14228,"mtime":1705609584095,"results":"206","hashOfConfig":"123"},{"size":3572,"mtime":1705599169113,"results":"207","hashOfConfig":"123"},{"size":18073,"mtime":1705610077055,"results":"208","hashOfConfig":"123"},{"size":14230,"mtime":1705609513527,"results":"209","hashOfConfig":"123"},{"size":3596,"mtime":1705606569431,"results":"210","hashOfConfig":"123"},{"size":2377,"mtime":1706404811228,"results":"211","hashOfConfig":"123"},{"size":2694,"mtime":1706312008436,"results":"212","hashOfConfig":"123"},{"size":947,"mtime":1704251610370,"results":"213","hashOfConfig":"123"},{"size":3106,"mtime":1706404723909,"results":"214","hashOfConfig":"123"},{"size":1111,"mtime":1703361962000,"results":"215","hashOfConfig":"123"},{"size":1623,"mtime":1703621671733,"results":"216","hashOfConfig":"123"},{"size":1048,"mtime":1703491456000,"results":"217","hashOfConfig":"123"},{"size":773,"mtime":1686471504000,"results":"218","hashOfConfig":"123"},{"size":36539,"mtime":1703627172196,"results":"219","hashOfConfig":"123"},{"size":0,"mtime":1703598375726,"results":"220","hashOfConfig":"123"},{"size":25469,"mtime":1706404760887,"results":"221","hashOfConfig":"123"},{"size":754,"mtime":1703621708846,"results":"222","hashOfConfig":"123"},{"size":9955,"mtime":1703621758838,"results":"223","hashOfConfig":"123"},{"size":2493,"mtime":1706404826481,"results":"224","hashOfConfig":"123"},{"size":2234,"mtime":1706404740257,"results":"225","hashOfConfig":"123"},{"size":901,"mtime":1705702132725,"results":"226","hashOfConfig":"123"},{"size":1578,"mtime":1705618723033,"results":"227","hashOfConfig":"123"},{"size":3222,"mtime":1705533719672,"results":"228","hashOfConfig":"123"},{"size":4496,"mtime":1705531974263,"results":"229","hashOfConfig":"123"},{"size":1776,"mtime":1705701316216,"results":"230","hashOfConfig":"123"},{"size":19206,"mtime":1706137697290,"results":"231","hashOfConfig":"123"},{"size":3639,"mtime":1705698460317,"results":"232","hashOfConfig":"123"},{"size":5261,"mtime":1705611613547,"results":"233","hashOfConfig":"123"},{"size":3148,"mtime":1705694712656,"results":"234","hashOfConfig":"123"},{"size":2321,"mtime":1705618826695,"results":"235","hashOfConfig":"123"},{"size":2503,"mtime":1705697945266,"results":"236","hashOfConfig":"123"},{"size":15569,"mtime":1706306060184,"results":"237","hashOfConfig":"123"},{"size":2490,"mtime":1706138361530,"results":"238","hashOfConfig":"123"},{"size":2182,"mtime":1705611686537,"results":"239","hashOfConfig":"123"},{"size":3130,"mtime":1705527487074,"results":"240","hashOfConfig":"123"},{"size":1513,"mtime":1705682595867,"results":"241","hashOfConfig":"123"},{"size":252,"mtime":1686471504000,"results":"242","hashOfConfig":"123"},{"size":483,"mtime":1703365042000,"results":"243","hashOfConfig":"123"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5snp69",{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449"},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457"},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473"},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517"},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527"},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542"},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546"},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554"},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565"},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600"},{"filePath":"601","messages":"602","suppressedMessages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","suppressedMessages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","suppressedMessages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613"},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617"},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638"},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649"},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653"},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661"},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\404.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\api\\hello.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\forget-password.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\sign-in.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\authentication\\sign-up.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\clientes.tsx",["671","672","673","674","675","676","677","678","679","680","681","682"],[],"import type { Metadata } from 'next'\r\nimport COMTopInterno from './components/top/topInterno'\r\n//import COMPFooter from './components/footer/footer2'\r\nimport COMPAnuncio1 from './components/anuncios/anuncio1'\r\nimport COMPAuspiciadores from './components/slider/auspiciadores'\r\nimport COMPProyectos from './components/proyectos/proyectos1'\r\nimport COMInfo from './components/informacion/info'\r\nimport COMNosotros from './components/nosotros/nosotros'\r\nimport COMProductoBuscar from './components/proyectos/buscador'\r\nimport CBreadcrumb from './components/informacion/pagebardump'\r\nimport CListadoPublicidad from './components/publicidad/listado'\r\nexport const metadata: Metadata = {\r\n  title: 'Compratulote.pe : Clientes',\r\n  description: 'Pagina incial de compra tu lote',\r\n  icons: {\r\n    icon: '/images/compratulote.ico', // /public path\r\n  },\r\n}\r\nexport default function Clientes() {\r\n  return (\r\n    <>\r\n     <COMTopInterno menu=\"clientes/auspiciadores\" />\r\n     <COMProductoBuscar />\r\n     <CBreadcrumb page=\"clientes/auspiciadores\"/>\r\n     <div className='container pageclientes'> \r\n        <div className=\"div\">\r\n          <div className=\"col\">\r\n           \r\n\r\n          </div>\r\n        </div>     \r\n        <div className='row'>\r\n          <div className='col-xs-12 col-sm-8 col-md-8 '>\r\n            <div className=\"row\">\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores1.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores2.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores3.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores4.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores1.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n              <div className='col-md-4 cols-ms-4'>\r\n                <img src=\"auspiciadores2.jpg\" className=\"img-fluid\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-xs-12 col-sm-4 col-md-4'>            \r\n            <div>\r\n             <CListadoPublicidad />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <COMPAnuncio1 />\r\n      \r\n    </>\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\accordions.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\anuncios\\anuncio1.tsx",["683","684","685"],[],"export default function CAnuncio1() {\r\n    return (\r\n       <>\r\n          <div className=\"fondo-red\">\r\n             <div className=\"container\">\r\n                <div className=\"row\" >\r\n                   <div className=\"align-self-stretch col-sm-12 col-md-4 anuncio1 text-center\">\r\n                     Anuncia tu Proyecto inmobiliario<br/>\r\n                      <button className=\"btn btn-warning btnanunciaaqui\">¡Aqui!</button> <br/>\r\n                     Contactanos<br/>\r\n                      <i className=\"fe fe-phone\"></i> 074-307092\r\n                   </div>\r\n                   <div className=\" align-self-stretch col-sm-12 col-md-8\">\r\n                      <a href=\"/\">\r\n                        <img src=\"anuncio1.jpg\" className=\"img-responsive img-fluid\" />\r\n                      </a>\r\n                   </div>\r\n                </div>\r\n             </div>\r\n          </div>\r\n       </>\r\n    )\r\n }","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\adorno.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\anuncio.tsx",["686","687"],[],"import { useEffect, useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nexport default function CAnuncio() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n    fetch('http://localhost:3001/pginformacion')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n        setDatos(filtrado);\r\n        setBanners(rptAPI);\r\n      })\r\n      .catch(error => console.error('Tenemos un error', error));\r\n  }, []);\r\n  return (\r\n    <>\r\n\r\n      {datos.map((fila, index) => (\r\n        <div key={index}>\r\n          {fila.categoria === 'empresa' ? (\r\n            <>\r\n              <p className=\"txt-jf\" dangerouslySetInnerHTML={{ __html: fila.content }} /> <Row className=\"mb-1\">\r\n                <div className=\"col-md-6 col-6\">\r\n                  <img src={fila.recurso1} className='img-thumbnail rounded-4' alt='' />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 col-6\">\r\n                  <img src={fila.recurso2} className='img-thumbnail rounded-4' alt='' />\r\n                </div>\r\n              </Row>\r\n            </>\r\n          ) : (\r\n            <Row className=\"mb-1\"> \r\n            <p className=\"txt-jf\" dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n           \r\n          </Row>\r\n          )}\r\n\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\banner.tsx",["688"],[],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Modal, Row } from \"react-bootstrap\";\r\n\r\nexport default function CBanner() {\r\n    const [showText, setShowText] = useState(true);\r\n    const [datos, setDatos] = useState([]);\r\n    const [setBanner, setBanners] = useState('');\r\n    const [lgShow, setLgShow] = useState(false);\r\n    useEffect(() => {\r\n        const identificador = window.location.pathname.split('/');\r\n        const categoriaApi = identificador[identificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pgslidergb')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const imagenesFiltradas = data.filter(fila => fila.categoria === categoriaApi);\r\n                setDatos(imagenesFiltradas);\r\n                setBanners(categoriaApi);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n\r\n        const interval = setInterval(() => {\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {datos.map((fila, index) => (\r\n                <div className=\"container-fluid contenedor-imagen p-0\" key={index}>\r\n                    <div className=\"position-relative\">\r\n                        <img src={fila.imagen} className=\"fondo img-fluid\" alt={fila.categoria} />\r\n                        <div className=\"position-absolute w-100 texto-superpuesto\">\r\n                            <div className=\"transicion-container bg-custom-colordk p-3\">\r\n                                <h2 className=\"text-white mb-3 titulo-Intro\">{fila.titulo}</h2>\r\n                                <p className=\"text-white mb-0 text-transicion\">{fila.subtitulo}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\"\r\n                        className=\"bi bi-play-circle-fill icono-reproducir\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" viewBox=\"0 0 16 16\" onClick={() => setLgShow(true)}>\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                    </svg>\r\n                    <Fragment>\r\n                        <Modal size=\"xl\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" style={{ backgroundColor: 'black' }}>\r\n                            <Modal.Header closeButton style={{ backgroundColor: 'lightgray' }}>  </Modal.Header>\r\n                            <Modal.Body style={{ backgroundColor: 'lightgray', height: '80vh' }}>\r\n                                <iframe className=\"w-100 h-100\" src={fila.href} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            ))}\r\n\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\footer.tsx",["689","690"],[],"export default function CFooter(props: any) {\r\n   let ruta = props.rutatmp || './'\r\n   return (\r\n      <>\r\n            <footer className=\"bg-dark text-light text-center py-3\">\r\n               <div className=\"container\">\r\n                  <p>Copyright &copy; 2023 Los Arrecifes de Mórrope | Desarrollado por Compratulote.pe</p>\r\n               </div>\r\n            </footer>\r\n            <div>\r\n               <a target=\"_blank\" href=\"https://api.whatsapp.com/send?phone=51954498176\" className=\"icon-footer-whatssap\"><img className=\"\" src={ruta + 'images/icon-whatsapp.png'} /></a>\r\n            </div>\r\n         \r\n      </>\r\n   )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\formulario.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\navbar.tsx",["691"],[],"import { useEffect, useState } from \"react\";\r\n\r\nexport default function CNavbar({ pagenav = \"\" }) {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selMenu, setSelMenu] = useState('');\r\n    \r\n    useEffect(() => {\r\n        const urlParts = window.location.pathname.split('/');\r\n        const categoriaFromUrl = urlParts[urlParts.length - 1];\r\n\r\n        fetch('http://localhost:3001/pgmenugb')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setDatos(data);\r\n                setSelMenu(categoriaFromUrl);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"nav flex-column flex-sm-row justify-content-center bg-white p-2 overflow-auto sticky-top\" >\r\n                <div className=\"d-flex flex-nowrap align-items-center justify-content-center justify-content-lg-start\">\r\n                    {datos.map((fila, index) => (\r\n                        <li key={index} className=\"nav-item fw-bold\">\r\n                            {fila.texto === 'Logo' ? (\r\n                                <img src={fila.href} alt=\"Logo\" style={{ zoom: '0.5' }} />\r\n                            ) : (\r\n                                <a className={`nav-link custom-sombra fs-4 ${selMenu.toLowerCase() === fila.texto.toLowerCase() ? 'text-light active bgProyect mx-2 rounded-5' : 'text-dark'}`} href={fila.href ? `../${fila.href}` : undefined}>\r\n                                    {fila.texto}\r\n                                </a>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </div>\r\n            </ul>\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\plano.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\top.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\ubicacion.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\estructura\\videosinfo.tsx",["692"],[],"import { Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nexport default function Videosinfo() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    const sliderRef = React.useRef(null);\r\n    const [datos, setDatos] = useState([]);\r\n    const [banners, setBanners] = useState('');\r\n    const nextSlide = () => {\r\n        sliderRef.current.slickNext();\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        sliderRef.current.slickPrev();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n        fetch('http://localhost:3001/pginformacion')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n    return (\r\n        <>\r\n            {datos.map((item, index) => (<Row className='m-0 p-5' key={index}>\r\n                <div className=\"col-md-7 col-lg-7 mb-1\">\r\n                    <div className='carousel slide p-2 h-100 w-100' style={{ border: '2px solid #212B36' }}>\r\n                        <Slider ref={sliderRef} {...settings}>\r\n                            {item.recurso1 && item.recurso1.split(',').map((path, i) => (\r\n                                <div key={i}>\r\n                                    <img src={path.trim()} alt={item.texto} className=\"w-100 h-100\" />\r\n                                </div>\r\n                            ))}\r\n                        </Slider>\r\n                        <div>\r\n                            <button className=\"carousel-control-prev\" onClick={prevSlide}>\r\n                                <span className=\"carousel-control-prev-icon bg-secondary\" aria-hidden=\"true\"></span>\r\n                                <span className=\"visually-hidden\">Previous</span>\r\n                            </button>\r\n                            <button className=\"carousel-control-next\" onClick={nextSlide}>\r\n                                <span className=\"carousel-control-next-icon bg-secondary\" aria-hidden=\"true\" ></span>\r\n                                <span className=\"visually-hidden\">Next</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 col-lg-5 mb-1\">\r\n                    <div className=\"p-2 position-relative h-100\" style={{ height: '100%', width: '100%', border: '2px solid #212B36' }}>\r\n                        <iframe src={item.recurso2} className=\"w-100 h-100\" style={{ border: 'none', borderRadius: 'inherit' }} allowFullScreen></iframe>\r\n                    </div>\r\n                </div>\r\n            </Row>))}\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\FacebookShare.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\footer\\footer1.tsx",["693","694","695"],[],"export default function CFooter1() {\r\n    return (\r\n     <>\r\n     <div className=\"footer1\">\r\n      <div className=\"container\">\r\n        <div className=\"row\" >\r\n          <div className=\"text-center col-sm-12 col-md-6\">\r\n              2024 Compratulote.pe - All right reserved\r\n          </div>\r\n          <div className=\"text-center col-sm-12 col-md-6\">\r\n            <a href=\"/\">\r\n              <i className=\"bi bi-caret-right-fill\"></i> Terminos y Condiciones\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     </div>\r\n     <div> \r\n      <a target=\"_blank\" href=\"https://api.whatsapp.com/send?phone=51954498176\" className=\"icon-footer-whatssap\"><img className=\"\" src=\"./images/icon-whatsapp.png\" /></a>\r\n     </div>\r\n     </>\r\n    )\r\n  }","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\footer\\footer2.tsx",["696","697","698"],[],"import { ReactElement } from \"react\";\r\nimport CMenus from \"../menus/menus1\";\r\nimport CRedes from \"../redes-sociales/redes1\";\r\nimport CFooter1 from \"./footer1\";\r\n\r\nexport default function CFooter2() {\r\n    return (\r\n        <div className=\"bg-blanco\">\r\n            <div className=\"container footer\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-sm-12 col-md-4 text-center\">\r\n                        <a href=\"/\" title=\"logo\"><img src=\"/logo1.png\" /></a>\r\n                        <br />\r\n                        <div className=\"slogan text-center\">\r\n                            ¡El lote perfecto a un solo clic!\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-4 menu\">\r\n                        <div className=\"footerTitulo\">\r\n                            Enlaces\r\n                        </div>\r\n                        <CMenus keystring=\"menufooter\" showcaret={true} />\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-4 footer-redes\">\r\n                        <div className=\"footerTitulo\">\r\n                            Redes Sociales\r\n                        </div>\r\n                        <CRedes keystring=\"footer-redes\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <CFooter1 />\r\n        </div>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\contactanos.tsx",["699","700"],[],"export default function CFormcontactanos(props:any) {\r\n    return(\r\n        <>\r\n            <div className='row fondocontacto'>\r\n                <div className=\"col-md-12\">\r\n                    <div className='container '>\r\n                        <div className='row'>\r\n                            <div className='col-xs-12 col-sm-4 col-md-3'>\r\n                                <img src=\"/images/servicios/contactanos/personaje.png\" className=\"img-fluid\" />\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-8 col-md-9 formulariocontacto\">\r\n                           <div className=\"row\">\r\n                            <div className=\"col-md-12 text-start tituloComponentes\">\r\n                          \r\n                            Quiero que me  <strong>contacten</strong>\r\n                          \r\n                            </div>\r\n                           </div>\r\n                            <form className=\"row\">\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    <label  className=\"form-label\">Nombres :</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"Ingresa tu nombre\"/>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    <label  className=\"form-label\">Celular :</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"N° Celular\"/>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    <label  className=\"form-label\">Apellidos :</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"Ingresa tus Apellidos\"/>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    <label className=\"form-label\">Correo: </label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"Correo Electronico\"/>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    <label  className=\"form-label\">DNI :</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"N° DNI\"/>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                    \r\n                                    <button type=\"submit\" className=\"btn btnenviar\">Enviar</button>                                    \r\n                                </div>                              \r\n                                \r\n                            </form>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\info.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\infodata.tsx",["701","702"],[],"export const infodata=[\r\n    {\r\n        id:1, title:'Gestiona tu información',\r\n        descripcion:'Gestiona la información de tu proyecto inmobiliario a través de la implementación de nuestra estructura web responsive.',\r\n        active:true,\r\n        icon:'informacion/imagen1.png'\r\n    },\r\n    {\r\n        id:2, title:'Anuncia tu Proyecto',\r\n        descripcion:'Promociona tu proyecto inmobiliario a través de nuestros canales publicitarios (redes sociales y portal web)',\r\n        active:false,\r\n        icon:'informacion/imagen2.png'\r\n    },\r\n    {\r\n        id:3, title:'Gestiona tu contenido',\r\n        descripcion:'Utiliza nuestros sistemas de información para administrar tu proyecto inmobiliario.',\r\n        active:false,\r\n        icon:'informacion/imagen3.png'\r\n    }\r\n]\r\nexport default function CInfoData({idkey=\"1\"}) {\r\n    var _datainfo=infodata.filter((item)=>item.id.toString()==idkey.toString());\r\n    var classactive=idkey==\"1\"?'active':'';\r\n    return (  \r\n        <div className={'infodata text-justify '+classactive} key={'infodata'+idkey}>  \r\n            {      \r\n            _datainfo.map((item)=>{               \r\n                return (<div key={'infodata'+idkey+'_'+item.id} className=\"infodataitem\">\r\n                    <img src={item.icon} className=\"iconinfodata\" />\r\n                    <strong>{item.title}</strong>\r\n                    <p>{item.descripcion}</p>\r\n                </div>)\r\n            })\r\n            } \r\n        </div>\r\n        )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\informacion\\pagebardump.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\menus\\menus1.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\menus\\menutop.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\nosotros\\nosotros.tsx",["703","704"],[],"export default function CNosotros(){\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 col-sm-12 tituloComponentes\">                 \r\n                        Sobre <strong>Nosotros</strong>   \r\n                </div>                 \r\n            </div> \r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-sm-12 infonosotros\">\r\n                    <div className=\"tituloComponentes\">\r\n                        ¿QUIENES  <strong>SOMOS </strong> ?\r\n                    </div>\r\n                    <div className=\"textonosotros\">\r\n                        Es una plataforma digital creada  para impulsar y promover los proyectos \r\n                        inmobiliarios de venta  de terrenos y lotes. Es una plataforma digital creada  \r\n                        para impulsar y promover los proyectos inmobiliarios de venta  de terrenos y lotes.\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-12\">\r\n                  <img src=\"responsive.png\" className=\"img-fluid\" />\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\categorias.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\recientes.tsx",["705","706"],[],"\"use client\"\r\nimport React, { useState, useEffect } from 'react'\r\nexport default function CRecientesnoticias(props: any) {\r\n   const [categoria, setCategorias] = useState([]);\r\n   const menutmp = props.menu || 'noticias';\r\n   useEffect(() => {\r\n      fetch(\"./json/noticias.json\")\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            let cate: any = [...new Set(data[\"noticias\"].sort((firstItem:any, secondItem:any)=>(\r\n                new Date(firstItem.fecha_publicacion) < new Date(secondItem.fecha_publicacion))?1:(\r\n                new Date(firstItem.fecha_publicacion) > new Date(secondItem.fecha_publicacion))?-1:0))];\r\n            setCategorias(cate);         \r\n         })\r\n   }, [])\r\n   const MesesName = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\"Julio\", \"Agosto\", \"Setiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\r\n\r\n //  (p1.price < p2.price) ? 1 : (p1.price > p2.price) ? -1 : 0\r\n   return(\r\n    <div className='listnoticiasrecientes' key={'reskey'}>\r\n    <div className=\"list-group tituloComponentes\" id=\"list-tab\" role=\"tablist\">\r\n        <a className=\"list-group-item categoriatitulo \" id=\"list-home-list\" data-bs-toggle=\"list\" href=\"#list-home\" role=\"tab\" aria-controls=\"list-home\">\r\n         <i className=\"fe fe-award\"></i>Noticas Recientes </a>\r\n        {\r\n             categoria.map((cate:any,key:any)=>{\r\n                let datetmp= new Date(cate.fecha_publicacion);   \r\n                return(<div className='card' key={'noti_'+cate.id}>\r\n                 <img className='img-fluid' src={cate.imagen} />\r\n                 <h3 className='tituloComponentes'>{cate.titulo} <br/>                   \r\n                 </h3>\r\n                 <div className='row userdata'> \r\n                    <div className='col-md-12 col-sm-12 text-start '><span className='user'>{cate.usuario}</span> \r\n                        <span className='date border-rounted'>{MesesName[datetmp.getMonth()]+' '+datetmp.getDay()+', '+datetmp.getFullYear()}</span> | \r\n                        <span  className='ncomment'>{cate.numero_comentarios + ' comentarios '}</span>\r\n                    </div>\r\n                 </div>\r\n                 <a href='./noticias' className='btn btn-danger btnleermas'>Leer mas &gt;&gt;</a>\r\n                </div>              \r\n                \r\n                )\r\n            })\r\n        } \r\n    </div>      \r\n    </div>\r\n   )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\noticias\\ver.tsx",["707"],[],"// Importa React, useState y useEffect\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Define tu componente CVernoticias\r\nexport default function CVernoticias(props: any) {\r\n  // Estado para almacenar las noticias\r\n  const [noticias, setNoticias] = useState<any[]>([]);\r\n\r\n  // Efecto para cargar las noticias al montar el componente\r\n  useEffect(() => {\r\n    // Utiliza fetch para obtener los datos del archivo JSON\r\n    fetch(\"/json/noticias.json\")\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        // Actualiza el estado con las noticias\r\n        setNoticias(data[\"noticias\"]);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching noticias:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Función para formatear la fecha\r\n  const formatDate = (dateString: string) => {\r\n    const MesesName = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Setiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\r\n    const date = new Date(dateString);\r\n    return MesesName[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\r\n  };\r\n\r\n  // Si las noticias aún no se han cargado, muestra un mensaje de carga\r\n  if (noticias.length === 0) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  // Busca la noticia con el ID proporcionado\r\n  const noticia = noticias.find(inoticia => inoticia.id == props.idnoticia);\r\n\r\n  // Si no se encuentra la noticia, muestra un mensaje\r\n  if (!noticia) {\r\n    return <div>No se encontró la noticia solicitada</div>;\r\n  }\r\n\r\n  // Si se encuentra la noticia, muestra los detalles\r\n  return (\r\n    <>\r\n      <div className=\"row\" key={noticia.id + \"1\"}>\r\n        <div className=\"col tituloComponentes\">\r\n          <strong>{noticia.titulo}</strong>\r\n        </div>\r\n        <div className='col-md-12 col-sm-12 text-start '>\r\n          <span className='user'>{noticia.usuario}</span>\r\n          <span className='date border-rounted'>{formatDate(noticia.fecha_publicacion)}</span> |\r\n          <span className='ncomment'>{noticia.numero_comentarios + ' comentarios '}</span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"row bg-blanco rounded\">\r\n          <div className=\"col-md-12 \">\r\n            <img className=\"img-fluid noticiasimagen\" src={noticia.imagen} alt={noticia.titulo} />\r\n          </div>\r\n          <div className=\"col-md-12 noticiadescipcion\" dangerouslySetInnerHTML={{ __html: noticia.descripcion }}></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\buscador.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectos1.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectoslist.tsx",["708"],[],"\"use client\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport CProyectovista1 from './vista1';\r\nexport default  function CProyectosList({tipo=''}){\r\n    const [data, setData] = useState([]);\r\n    const [currentpage,setCurrentpage]=useState(1);\r\n    const totalregistroxpage=6;\r\n    useEffect(() => {\r\n        fetch(\"./json/proyectos.json\")\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                let datatmp: any;\r\n                if(tipo=='Destacados'){\r\n                    datatmp = [...new Set(data[\"data\"].filter((item:any)=>{\r\n                        return item.destacado==true\r\n                    }).sort((firstItem:any, secondItem:any)=>(firstItem.numerovistas<secondItem.numerovistas)?1:-1))];\r\n                }else if(tipo=='Los mas vistos'){\r\n                    datatmp = [...new Set(data[\"data\"].sort((firstItem:any, secondItem:any)=>(firstItem.numerovistas<secondItem.numerovistas)?1:-1||0))];\r\n                }else\r\n                    datatmp = [...new Set(data[\"data\"].sort((firstItem:any, secondItem:any)=>(\r\n                            new Date(firstItem.fecha_registro) < new Date(secondItem.fecha_registro))?1:-1 || 0))];\r\n                setData(datatmp);         \r\n            })\r\n    }, [])\r\n    const totalPages=Math.ceil(data.length/totalregistroxpage);\r\n    //const indexpages = Array.from({ length: totalPages }, (_, index) => ({ id: `${index + 1}`, activo: index==currentpage-1?`si`:`no`}));\r\n    //const indexdesde=currentpage*totalregistroxpage;\r\n    const indexhasta= (currentpage)*totalregistroxpage;\r\n    const items =data.slice(0,indexhasta);\r\n    return (\r\n        <>\r\n        <div className=\"row listadoproyectos \">\r\n        {\r\n            items.map((itemp:any,key:any)=>{\r\n                return(\r\n                    <div className=\"col-md-4 col-sm-6 col-12 \" key={'divp'+key}>\r\n                        <CProyectovista1 {...itemp} />    \r\n                        <br />                \r\n                    </div>                \r\n                )\r\n            })\r\n        }\r\n        {           \r\n            <div className={ currentpage<totalPages?'paginacion text-center':'ocultarpaginacion'}>            \r\n                <div className='btn btnvermas' onClick={()=>setCurrentpage(currentpage+1)}>Ver más Proyectos</div>            \r\n            </div>\r\n        }\r\n        </div>\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\proyectosresultado.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\slider.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\verproyectos.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\vista1.tsx",["709","710","711","712","713","714","715","716","717"],[],"export default function CProyectovista1(itemp:any) {\r\n    return(\r\n        <div key={'divp'+itemp.id}>           \r\n            <div className=\"card\" key={'cardp'+itemp.id}>\r\n                <img key={'imgp'+itemp.id} src={itemp.image} className=\"card-img-top\" alt={'Foto '+itemp.titulo}/>\r\n                <div className=\"card-body\">\r\n                    <span className=\"h4 card-title\">{itemp.titulo}</span>\r\n                    <div className=\"card-text txtdescripcion my-1\">\r\n                        {itemp.descripcion||`---`}\r\n                    </div>\r\n                    <div className=\"card-text ubicacion row mt-2\">\r\n                        <div className=\"col-2\">\r\n                            <i className=\"fe fe-map-pin fa-2x\" />\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <strong>{itemp.direccion}</strong><br/>\r\n                            <small className=\"text-body-secondary\">{itemp.departamento}</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row card-footer\">\r\n                        <div className=\"col-6\">\r\n                            <a href={itemp.href} className=\"btn \"> Ver Proyecto </a>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/1.png\" className='img-fluid'/></div>\r\n                                <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/2.png\" className='img-fluid'/></div>\r\n                                <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/3.png\" className='img-fluid'/></div>\r\n                                <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/4.png\" className='img-fluid'/></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\proyectos\\vista2.tsx",["718","719","720","721","722","723","724","725","726"],[],"export default function CProyectovista1(itemp:any) {\r\n    return(\r\n        <div key={'divp'+itemp.id}>           \r\n            <div className=\"card\" key={'cardp'+itemp.id}>\r\n                <div className=\"row\">\r\n                 <div  className=\"col-md-5\">\r\n                <img key={'imgp'+itemp.id} src={itemp.image} className=\"card-img-top\" alt={'Foto '+itemp.titulo}/>\r\n                        <div className=\"lotesdesde\">Lotes desde <strong>{itemp.lotesdesdem2}</strong></div>    \r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">\r\n                                <i className={`fe fe-star${itemp.destacado?'-fill':''} startlistado`}></i>  \r\n                            {itemp.titulo}</h5>\r\n                        <div className=\"card-text txtdescripcion\">\r\n                            {itemp.descripcion||`---`}\r\n                        </div>\r\n                        <div className=\"card-text ubicacion row\">\r\n                            <div className=\"col-1\">\r\n                                <i className=\"fe fe-map-pin icon\" />\r\n                            </div>\r\n                            <div className=\"col-11\">\r\n                                <strong>{itemp.direccion}</strong><br/>\r\n                                <small className=\"text-body-secondary\">{itemp.departamento}</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row card-footer\">\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/1.png\" className='img-fluid' /></div>\r\n                                        <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/2.png\" className='img-fluid' /></div>\r\n                                        <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/3.png\" className='img-fluid' /></div>\r\n                                        <div className=\"col-md-3 iconproy\"><img src=\"/images/icons/4.png\" className='img-fluid' /></div>\r\n                                    </div>\r\n                                </div>\r\n                            <div className=\"col-6 text-end\">\r\n                                <a href={itemp.href} className=\"btn \"> Ver Proyecto </a>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        </div> \r\n    );\r\n\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\publicidad\\listado.tsx",["727","728"],[],"\"use client\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/navigation';\r\nexport default function CListadoPublicidad(props: any) {\r\n   const router = useRouter();\r\n   const [data, setData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      fetch(\"./json/publicidad.json\")\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            let cate: any = [...new Set(data[\"publicidad\"].sort((firstItem: any, secondItem: any) => (\r\n               new Date(firstItem.fecha_publicacion) < new Date(secondItem.fecha_publicacion)) ? 1 : (\r\n                  new Date(firstItem.fecha_publicacion) > new Date(secondItem.fecha_publicacion)) ? -1 : 0))];\r\n            setData(cate);\r\n         })\r\n   }, [])\r\n\r\n   const MesesName = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Setiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\r\n\r\n   //  (p1.price < p2.price) ? 1 : (p1.price > p2.price) ? -1 : 0\r\n   return (\r\n      <div className='listpublicidad' key={'reskey'}>\r\n         <div className=\"list-group \" id=\"list-tab\" role=\"tablist\">\r\n            {\r\n               data.map((item: any, key: any) => {\r\n                  return (<div className='' key={'noti_' + item.id}>\r\n                     <a href={item.url}><img className='img-fluid imgpublicidad' src={item.imagen} /></a>\r\n                  </div>\r\n\r\n                  )\r\n               })\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\redes-sociales\\redes1.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\redes-sociales\\share.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\animacion.tsx",["729"],[],"\"use client\"\r\nimport React, {useState, useEffect} from 'react'\r\nexport default function CAnimacion(props:any) {\r\n   //let imagenesslider:any=[];\r\n   const [imgslider, setImgslider] = useState([]);\r\n   const menutmp=props.categoria||'inicio';\r\n  /* useEffect(() => {\r\n      fetch(\"./json/sliders.json\")\r\n           .then(res => res.json())\r\n           .then(data => setImgslider(data[menutmp]))\r\n    }, [])\r\n*/\r\nuseEffect(() => {\r\n   const urlParts = window.location.pathname.split('/');\r\n   let categoriaFromUrl = urlParts[urlParts.length - 1];\r\n   if (categoriaFromUrl === '') {\r\n      categoriaFromUrl = 'inicio';\r\n  }\r\n   fetch('http://localhost:3001/slider2')\r\n       .then(response => response.json())\r\n       .then(data => {\r\n           const sliderDataForCategoria = data.filter(item => item.categoria === categoriaFromUrl);\r\n           setImgslider(sliderDataForCategoria);\r\n       })\r\n       .catch(error => console.error('Error al obtener datos:', error));\r\n}, []);\r\n\r\n   if(imgslider!=undefined)\r\n      return (\r\n         <div id=\"carouselExample\" className=\"carousel slide\" key={\"menu-1\"}>\r\n            <div className=\"carousel-inner\">\r\n               {               \r\n                  imgslider.map((itemp:any,key:any)=>{\r\n                     return(                       \r\n                        <div className=\"carousel-item active\" key={'imageslider_'+key}>\r\n                           <img src={itemp.imagen} className=\"d-block w-100\" alt=\"Proyecto 01\" />\r\n                           <h2 className='textoslider'>{itemp.texto}</h2>\r\n                        </div>                       \r\n                     )\r\n                  })\r\n               }\r\n            \r\n            </div>\r\n            <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"prev\">\r\n               <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n               <span className=\"visually-hidden\">Previous</span>\r\n            </button>\r\n            <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"next\">\r\n               <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n               <span className=\"visually-hidden\">Next</span>\r\n            </button>\r\n         </div>\r\n      );\r\n   else{\r\n      return (<div key={\"espacio-1\"}>\r\n        <br /> <br /> <br />\r\n         </div>)\r\n   }\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\anuncios.tsx",["730","731","732","733","734","735"],[],"'use client'\r\nimport React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function CAnuncios() {\r\n  var settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,   \r\n  };\r\n  return (\r\n    <div className=\"container\">       \r\n        <Slider {...settings}>\r\n        <div>\r\n            <img src=\"/images/anuncios/anuncio01.png\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"/images/anuncios/anuncio02.png\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"/images/anuncios/anuncio03.png\" className=\"img-fluid\" />\r\n        </div>          \r\n        </Slider>\r\n    </div>\r\n  );\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\slider\\auspiciadores.tsx",["736","737","738","739","740","741","742","743","744","745","746","747"],[],"'use client'\r\nimport React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nexport default function CAuspiciadores() {\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n      // You can unslick at a given breakpoint now by adding:\r\n      // settings: \"unslick\"\r\n      // instead of a settings object\r\n    ]\r\n  };\r\n  return (\r\n    <div className=\"container auspiciadores1\">\r\n        <div className=\"row\">\r\n            <div className=\"col tituloComponentes\">\r\n                Marcas <strong>Auspiciadoras</strong>\r\n            </div>\r\n        </div>\r\n        <Slider {...settings}>\r\n         \r\n        <div>\r\n            <img src=\"auspiciadores1.jpg\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"auspiciadores2.jpg\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"auspiciadores3.jpg\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"auspiciadores4.jpg\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"auspiciadores1.jpg\" className=\"img-fluid\" />\r\n        </div>\r\n        <div>\r\n            <img src=\"auspiciadores2.jpg\" className=\"img-fluid\" />\r\n        </div>      \r\n        </Slider>\r\n    </div>\r\n  );\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\tools\\paginacion.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\top1.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\top2.tsx",["748","749","750"],[],"import CMenusTop from \"../menus/menutop\";\r\nimport CAnimacion from \"../slider/animacion\";\r\nimport CTop1 from \"./top1\";\r\n\r\nexport default function CTop2(props:any) {\r\n  const menu=props.menu||'inicio';\r\n  return (\r\n    <>\r\n    <CTop1 />\r\n    <div className=\"bg-blanco\">\r\n      <div className=\"container topbarlogo\">\r\n        <div className=\"row\">\r\n          <div className=\"text-center text-md-start col-sm-12 col-md-4\">\r\n              <a href=\"/\" title=\"logo\"><img src=\"/logo1.png\" /></a>\r\n          </div>\r\n          <div className=\"text-center text-md-end col-sm-12 col-md-8 \">     \r\n              <div className=\"row infocontact text-dark\">\r\n                <div className=\"col-sm-12 col-md-6\">\r\n                  <i className=\"fe fe-phone icontop\"></i> 074-307092\r\n                </div>\r\n                <div className=\"col-sm-12 col-md-6\">\r\n                  <i className=\"fe fe-mail icontop \"></i> operaciones@innovate.pe\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>        \r\n      </div>\r\n      <CMenusTop menu={menu}/>\r\n      <CAnimacion />\r\n    </div>\r\n    </>\r\n   )\r\n }","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\top\\topInterno.tsx",["751","752","753"],[],"import CMenusTop from \"../menus/menutop\";\r\nimport CAnimacion from \"../slider/animacion\";\r\nimport CTop1 from \"./top1\";\r\n\r\nexport default function CTopInterno(props:any) {\r\n    const menu=props.menu||'inicio';\r\n  return (\r\n    <>\r\n    <CTop1 />\r\n    <div className=\"bg-blanco\">\r\n      <div className=\"container topbarlogo\">\r\n        <div className=\"row\">\r\n          <div className=\"text-center text-md-start col-sm-12 col-md-4\">\r\n              <a href=\"/\" title=\"logo\"><img src=\"/logo1.png\" /></a>\r\n          </div>\r\n          <div className=\"text-center text-md-end col-sm-12 col-md-8 \">     \r\n              <div className=\"row infocontact\">\r\n                <div className=\"col-sm-12 col-md-6\">\r\n                  <i className=\"fe fe-phone icontop\"></i> 074-307092\r\n                </div>\r\n                <div className=\"col-sm-12 col-md-6\">\r\n                  <i className=\"fe fe-mail icontop \"></i> info@imnovate.pe\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>        \r\n      </div>\r\n      <CMenusTop  menu={menu}/>\r\n      <CAnimacion menu={menu==='clientes/auspiciadores'?'clientes':menu} />\r\n    </div>\r\n    </>\r\n   )\r\n }","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\components\\WhatsappShare.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb\\crudbanner.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb\\infobanner.tsx",["754"],[],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Form, Modal, Row, Table } from 'react-bootstrap';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nconst GBinfo = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [categoriaSeleccionada, setCategoriaSeleccionada] = useState('');\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n    const handleInputChange = (fieldName, value) => {\r\n        setFormData({\r\n            ...formData,\r\n            [fieldName]: value,\r\n        });\r\n        setCategoriaSeleccionada(value);\r\n    };\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgslidergb')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const filteredData = datos.filter((item) => item.categoria === categoriaSeleccionada);\r\n    return (\r\n        <>\r\n            <Row className='mb-4'>\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title as=\"h4\">SELECCIONA UNA CATEGORIA</Card.Title>\r\n                            <div className='col-md-6 col-6 mb-4'>\r\n                                <select className=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\"\r\n                                    value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)}>\r\n                                    <option value=\"\" disabled>Seleccionar</option>\r\n                                    {datos.filter((value, index, self) => index === self.findIndex((v) => v.categoria === value.categoria))\r\n                                        .map((fila, index) => (\r\n                                            <option key={index} value={fila.categoria}>{fila.categoria}</option>\r\n                                        ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className={`carousel-container ${filteredData.length > 0 ? 'active' : 'inactive'}`}>\r\n                                {filteredData.map((item, index) => (\r\n                                    <div className=\"container-fluid contenedor-imagen p-0\" key={index}>\r\n                                        <div className=\"position-relative\">\r\n                                            <img src={item.imagen} className=\"fondo\" alt={item.categoria} />\r\n                                            <div className=\"position-absolute w-100 texto-superpuesto\">\r\n                                                <div className=\"transicion-container bg-custom-colordk\">\r\n                                                    <h2 className={'text-white transicion-container titulo-Intro'}>{item.titulo}</h2>\r\n                                                    <p className={'text-white text-transicion'}>{item.subtitulo}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\"\r\n                                            className=\"bi bi-play-circle-fill icono-reproducir\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" viewBox=\"0 0 16 16\" onClick={() => setLgShow(true)}>\r\n                                            <path\r\n                                                d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                                        </svg>\r\n                                    </div>))}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GBinfo","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannergb.tsx",["755"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport GBbanner from './bannergb/crudbanner';\r\nimport GBinfo from './bannergb/infobanner';\r\n\r\nconst slider = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-4 pb-1 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-3 text-secondary\">BANNER PRINCIPAL DE GARZA BLANCA</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del banner principal, así como también podrás editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\" onClick={() => ocultarMantenimiento('home')} >\r\n                                        VISTA PREVIA\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className={`nav-link ${seccionActiva === 'paginas' ? 'active' : ''}`}\r\n                                        href=\"#\" onClick={() => ocultarMantenimiento('paginas')} >\r\n                                        MANTENIMIENTO\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row className=\"mb-8 m-1\">\r\n                    {seccionActiva === 'home' && <GBinfo />}\r\n                    {seccionActiva === 'paginas' && <GBbanner />}\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default slider","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\bannervs.tsx",["756","757","758","759","760","761","762","763","764"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst slider = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [categoriaSeleccionada, setCategoriaSeleccionada] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        titulo: '',\r\n        subtitulo: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n        setCategoriaSeleccionada(value);\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.titulo.toLowerCase().includes(searchTerm.toLowerCase()) || fila.subtitulo.toLowerCase().includes(searchTerm.toLowerCase()) || fila.categoria.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgbannervs')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const filteredData = datos.filter((item) => item.categoria === categoriaSeleccionada);\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgbannervs/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    titulo: data.titulo,\r\n                    subtitulo: data.subtitulo,\r\n                    categoria: data.categoria,\r\n                    imagen: data.imagen,\r\n                    href: data.href\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgbannervs/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgbannervs', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgbannervs/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgbannervs')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <br />\r\n                <Row className=\"mb-5 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h4\">SELECCIONA UNA CATEGORIA</Card.Title>\r\n                                <div className='col-md-6 col-6 mb-4'>\r\n                                    <select className=\"form-select\" id=\"floatingSelect\" aria-label=\"Floating label select example\"\r\n                                        value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)}>\r\n                                        <option value=\"\" disabled>Seleccionar</option>\r\n                                        {datos.filter((value, index, self) => index === self.findIndex((v) => v.categoria === value.categoria))\r\n                                            .map((fila, index) => (\r\n                                                <option key={index} value={fila.categoria}>{fila.categoria}</option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className={`carousel-container ${filteredData.length > 0 ? 'active' : 'inactive'}`}>\r\n                                    {filteredData.map((item, index) => (\r\n                                        <div className=\"container-fluid contenedor-imagen p-0\" key={index}>\r\n                                            <div className=\"position-relative\">\r\n                                                <img src={item.imagen} className=\"fondo\" alt={item.categoria} />\r\n                                                <div className=\"position-absolute w-100 texto-superpuesto\">\r\n                                                    <div className=\"transicion-container bg-custom-colordk\">\r\n                                                        <h2 className={'text-white transicion-container titulo-Intro'}>{item.titulo}</h2>\r\n                                                        <p className={'text-white text-transicion'}>{item.subtitulo}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\"\r\n                                                className=\"bi bi-play-circle-fill icono-reproducir\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" viewBox=\"0 0 16 16\" onClick={() => setLgShow(true)}>\r\n                                                <path\r\n                                                    d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                                            </svg>\r\n                                        </div>))}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"mb-4 mb-lg-0\">\r\n                                 \r\n                                    <div className='row text-end'>\r\n                                        <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                            &nbsp;\r\n                                        </div>\r\n                                        <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                            <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <Button onClick={() => setLgShow(true)}>REGISTRAR</Button>{' '}\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <Table hover responsive className=\"scroll text-nowrap\">\r\n                                        <thead >\r\n                                            <tr className='table-secondary'>\r\n                                                <th scope=\"col\">N°</th>\r\n                                                <th scope=\"col\">Id</th>\r\n                                                <th scope=\"col\">Titulo</th>\r\n                                                <th scope=\"col\">Subtitulo</th>\r\n                                                <th scope=\"col\">Categoria</th>\r\n                                                <th scope=\"col\">Imagen</th>\r\n                                                <th scope=\"col\">Ruta</th>\r\n                                                <th scope='col'>Acciones</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {filteredMenus.map((fila, index) => (\r\n                                                <tr key={fila.id}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>{fila.id}</td>\r\n                                                    <td>{fila.titulo}</td>\r\n                                                    <td>{fila.subtitulo}</td>\r\n                                                    <td>{fila.categoria}</td>\r\n                                                    <td>{fila.imagen}</td>\r\n                                                    <td>{fila.href}</td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                        <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Fragment>\r\n                    <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                <h4 ><strong>MANTENIMIENTO:</strong> Página Slider</h4>\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                                <div>\r\n                                    <Form>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-sm-6 col-lg-6\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <select className=\"form-select\"\r\n                                                    id=\"floatingSelect\" aria-label=\"Floating label select example\"\r\n                                                    value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)}>\r\n                                                    <option value=\"\" disabled>Selecciona un categoria</option>\r\n\r\n                                                    {datos.filter((value, index, self) => index === self.findIndex((v) => v.categoria === value.categoria))\r\n                                                        .map((fila, index) => (\r\n                                                            <option key={index} value={fila.categoria}>{fila.categoria}</option>\r\n                                                        ))}\r\n                                                </select>\r\n\r\n                                            </div>\r\n                                        </Row>\r\n\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Subtitulo\" value={formData.subtitulo} onChange={(e) => handleInputChange('subtitulo', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Imagen\" value={formData.imagen} onChange={(e) => handleInputChange('imagen', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Link\" value={formData.href} onChange={(e) => handleInputChange('href', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3 text-end\">\r\n                                            <Col md={12} xs={12}>\r\n                                                <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                                &nbsp;\r\n                                                <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Form>\r\n                                </div>\r\n                            </Col>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </Fragment>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default slider","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\carrousel\\Inicio.tsx",["765"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Link from 'next/link';\r\nimport { Col, Card, Dropdown, Image, Row } from 'react-bootstrap';\r\nimport { MoreVertical } from 'react-feather';\r\nimport ProjectsContributionsData from 'data/profile/ProjectsContributionsData';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nconst Paginas = () => {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    const sliderRef = React.useRef(null);\r\n    const [datos, setDatos] = useState([]);\r\n    const [categoriaSeleccionada, setCategoriaSeleccionada] = useState('');\r\n\r\n    const nextSlide = () => {\r\n        sliderRef.current.slickNext();\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        sliderRef.current.slickPrev();\r\n    };\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        (<Link href=\"\" ref={ref}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n            className=\"text-muted text-primary-hover\">\r\n            {children}\r\n        </Link>)\r\n    ));\r\n\r\n    CustomToggle.displayName = 'CustomToggle';\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n    const handleInputChange = (fieldName, value) => {\r\n        setFormData({\r\n          ...formData,\r\n          [fieldName]: value,\r\n        });\r\n        setCategoriaSeleccionada(value);\r\n        sliderRef.current.slickGoTo(0);\r\n      };\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/slider2')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const filteredData = datos.filter((item) => item.categoria === categoriaSeleccionada);\r\n    return (\r\n        <Row>\r\n            <Col xl={8} lg={12} md={12} xs={12} className=\"mb-6\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <div className={`carousel-container ${filteredData.length > 0 ? 'active' : 'inactive'}`}>\r\n                            <Slider ref={sliderRef} {...settings} >\r\n                                {filteredData.map((item) => (\r\n                                    <div key={item.id}>\r\n                                        <img src={item.imagen} alt={item.texto} className=\"d-block w-100\" />\r\n                                    </div>\r\n                                ))}\r\n                            </Slider>\r\n                            <div>\r\n                                <button className=\"carousel-control-prev\" onClick={prevSlide}>\r\n                                    <span className=\"carousel-control-prev-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"visually-hidden\">Previous</span>\r\n                                </button>\r\n                                <button className=\"carousel-control-next\" onClick={nextSlide}>\r\n                                    <span className=\"carousel-control-next-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"visually-hidden\">Next</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n            <Col xl={4} lg={12} md={12} xs={12} className=\"mb-6\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h4\">SELECCIONA UNA CATEGORIA</Card.Title>\r\n                        <div >\r\n                            <select className=\"form-select\"\r\n                                id=\"floatingSelect\" aria-label=\"Floating label select example\"\r\n                                value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)}>\r\n                                <option value=\"\" disabled>Seleccionar</option>\r\n\r\n                                {datos.filter((value, index, self) => index === self.findIndex((v) => v.categoria === value.categoria))\r\n                                    .map((fila, index) => (\r\n                                        <option key={index} value={fila.categoria}>{fila.categoria}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginas\r\n\r\n\r\n\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\carrousel\\Paginas.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\contactame.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa\\crudempresa.tsx",["766"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../../dashboard/timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst Crudempresa = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content, insertText) => {\r\n        setTitle(insertText);\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pgempresa';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pgempresa')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgempresa')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pgempresa/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pgempresa')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 mt-3\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row '>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    {fila.content && (\r\n                                        <div className='row'>\r\n                                            <div className=\"col-md-1 col-12\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-caret-right-fill cProyect\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"col-md-11 col-12\">\r\n                                                <h2 className='fw-bold cProyect'>{fila.title}</h2>\r\n                                            </div>\r\n\r\n                                            <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-1 col-12\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-caret-right-fill cProyect\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"></path></svg>\r\n                                            </div>\r\n                                            <div className=\"col-md-11 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Crudempresa","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa\\infoeditable.tsx",["767","768"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../../dashboard/timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst Infoeditable = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const [recurso1, setRecurso1] = useState();\r\n    const [recurso2, setRecurso2] = useState();\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        switch (id) {\r\n            case 'id':\r\n                setSelectedId(value);\r\n                break;\r\n            case 'recurso1':\r\n                setRecurso1(value);\r\n                break;\r\n            case 'recurso2':\r\n                setRecurso2(value);\r\n                break;\r\n            default:\r\n                setTitle(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleLinkClick = (id, content, recurso1, recurso2, title) => {\r\n        setRecurso1(recurso1);\r\n        setRecurso2(recurso2);\r\n        setInsertText(content);\r\n        setTitle(title);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pginformacion';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pginformacion')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pginformacion')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacion/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacion')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"m-1 mt-5\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3' key={index}>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.recurso1, fila.recurso2, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <div className='row'>\r\n                                        <div className='col-md-12 col-12'>\r\n                                             {fila.content && (\r\n                                                <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            <div className='row'>\r\n                                                <div className=\"container\">\r\n                                                    <form >\r\n                                                        <Row className=\"mb-1\">\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <img src={fila.recurso1} className='img-thumbnail rounded-4' alt='Text' />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <img src={fila.recurso2} className='img-thumbnail rounded-4' alt='Text2' />\r\n                                                            </div>\r\n                                                        </Row>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className='mb-8 m-1 mt-3'>\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-6 col-6 \">\r\n                                                <label htmlFor='recurso1'>Imagen o Video:</label>\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 1 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso1' value={recurso1}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n                                          \r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <label htmlFor='recurso2'>Imagen o Video:</label><br />\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 2 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso2' value={recurso2}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </Row>\r\n                                      \r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Infoeditable","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresa.tsx",["769","770"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Crudempresa from './empresa/crudempresa';\r\nimport Infoeditable from './empresa/infoeditable';\r\n\r\n\r\nconst especificaciones = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-4 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">PAGINA EMPRESA</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del slider como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        DESCRIPCION\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'paginas' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('paginas')}\r\n                                    >\r\n                                        SERVICIOS\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    {seccionActiva === 'home' && <Infoeditable />}\r\n                    {seccionActiva === 'paginas' && <Crudempresa />}\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default especificaciones","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs\\crudempresavs.tsx",["771"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../../dashboard/timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst VScrudempresa = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content, insertText) => {\r\n        setTitle(insertText);\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pgempresa';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pgempresa')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgempresa')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pgempresa/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pgempresa')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 mt-3\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row '>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    {fila.content && (\r\n                                        <div className='row'>\r\n                                            <div className=\"col-md-1 col-12\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-caret-right-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div className=\"col-md-11 col-12\">\r\n                                                <h2 className='fw-bold text-danger'>{fila.title}</h2>\r\n                                            </div>\r\n\r\n                                            <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-1 col-12\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-caret-right-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"></path></svg>\r\n                                            </div>\r\n                                            <div className=\"col-md-11 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VScrudempresa","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs\\infoempresavs.tsx",["772","773"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../../dashboard/timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst VSinfoempresa = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const [recurso1, setRecurso1] = useState();\r\n    const [recurso2, setRecurso2] = useState();\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        switch (id) {\r\n            case 'id':\r\n                setSelectedId(value);\r\n                break;\r\n            case 'recurso1':\r\n                setRecurso1(value);\r\n                break;\r\n            case 'recurso2':\r\n                setRecurso2(value);\r\n                break;\r\n            default:\r\n                setTitle(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleLinkClick = (id, content, recurso1, recurso2) => {\r\n        setRecurso1(recurso1);\r\n        setRecurso2(recurso2);\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pginformacion';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pginformacion')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pginformacion')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacion/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacion')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"m-1 mt-5\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3' key={index}>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.recurso1, fila.recurso2)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <div className='row'>\r\n                                        <div className='col-md-12 col-12'>\r\n                                             {fila.content && (\r\n                                                <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            <div className='row'>\r\n                                                <div className=\"container\">\r\n                                                    <form >\r\n                                                        <Row className=\"mb-1\">\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <img src={fila.recurso1} className='img-thumbnail rounded-4' alt='Text' />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <img src={fila.recurso2} className='img-thumbnail rounded-4' alt='Text2' />\r\n                                                            </div>\r\n                                                        </Row>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className='mb-8 m-1 mt-3'>\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        {/* card body */}\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-6 col-6 \">\r\n                                                <label htmlFor='recurso1'>Imagen o Video:</label>\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 1 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso1' value={recurso1}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n                                          \r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <label htmlFor='recurso2'>Imagen o Video:</label><br />\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 2 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso2' value={recurso2}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </Row>\r\n                                      \r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VSinfoempresa","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\empresavs.tsx",["774","775"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Crudempresa from './empresa/crudempresa';\r\nimport Infoeditable from './empresa/infoeditable';\r\n\r\n\r\nconst especificaciones = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-4 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">VILLA SIPAN: PÁGINA EMPRESA</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del slider como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        DESCRIPCION\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'paginas' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('paginas')}\r\n                                    >\r\n                                        SERVICIOS\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    {seccionActiva === 'home' && <Infoeditable />}\r\n                    {seccionActiva === 'paginas' && <Crudempresa />}\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default especificaciones","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion\\crudservicio.tsx",["776","777"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst CrudServicio = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        categoria: '',\r\n        titulo: '',\r\n        texto: '',\r\n        imagen: '',\r\n        estado: ''\r\n\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.texto.toLowerCase().includes(searchTerm.toLowerCase()) || fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/serviciosES')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/serviciosES/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    imagen: data.imagen,\r\n                    estado: data.estado\r\n\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/serviciosES/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/serviciosES', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/serviciosES/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/serviciosES')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <br />\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"mb-4 mb-lg-0\">\r\n                                <br />\r\n                                <div className='row text-end'>\r\n                                    <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                        <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <Button onClick={() => setLgShow(true)}>REGISTRAR</Button>{' '}\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <Table hover responsive className=\"scroll text-nowrap\">\r\n                                    <thead >\r\n                                        <tr className='table-secondary'>\r\n                                            <th scope=\"col\">Id</th>\r\n                                            <th scope=\"col\">Categoria</th>\r\n                                            <th scope=\"col\">Titulo</th>\r\n                                            <th scope=\"col\">Texto</th>\r\n                                            <th scope=\"col\">Imagen</th>\r\n                                            <th scope='col'>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredMenus.map((fila, index) => (\r\n                                            <tr key={fila.id}>\r\n                                                <td>{fila.id}</td>\r\n                                                <td>{fila.categoria}</td>\r\n                                                <td>{fila.titulo}</td>\r\n                                                <td><textarea className='form-control no-scroll' value={fila.texto} style={{ width: '350px', border: 'none', overflowY: 'hidden', backgroundColor: 'white' }} disabled /></td>\r\n                                                <td><img src={fila.imagen} className='img-thumbnail' /></td>\r\n                                                <td>\r\n                                                    <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                    <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-6 col-sm-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <div className='form-check form-switch '>\r\n                                                <label className=\"form-check-label\" style={{ alignItems: 'center' }}>Mostrar el contenido</label>\r\n                                                <input className=\"form-check-input\" style={{ marginRight: '5px', alignItems: 'center', fontSize: '16px' }} type=\"checkbox\" role=\"switch\"\r\n                                                    checked={Boolean(formData.estado)} onChange={(e) => handleInputChange('estado', e.target.checked)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className='mb-3'>\r\n                                        <div className=\"col-md-6 col-sm-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Categoria\" value={formData.categoria} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className='col-md-12 col-12 text-center'>\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Imagen: /ruta/imagen.png\" value={formData.imagen} onChange={(e) => handleInputChange('imagen', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrudServicio","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion\\servicioeditable.tsx",["778"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { AspectRatio } from 'react-bootstrap-icons';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst Servicioeditable = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const [recurso1, setRecurso1] = useState();\r\n    const [recurso2, setRecurso2] = useState();\r\n    const [categoria, setCategoria] = useState();\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    const sliderRef = React.useRef(null);\r\n    const nextSlide = () => {\r\n        sliderRef.current.slickNext();\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        sliderRef.current.slickPrev();\r\n    };\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        switch (id) {\r\n            case 'id':\r\n                setSelectedId(value);\r\n                break;\r\n            case 'recurso1':\r\n                setRecurso1(value);\r\n                break;\r\n            case 'recurso2':\r\n                setRecurso2(value);\r\n                break;\r\n            case 'categoria':\r\n                setRecurso2(value);\r\n                break;\r\n            default:\r\n                setTitle(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n\r\n    const handleLinkClick = (id, content, recurso1, recurso2, categoria, title) => {\r\n        setRecurso1(recurso1);\r\n        setRecurso2(recurso2);\r\n        setInsertText(content);\r\n        setCategoria(categoria);\r\n        setTitle(title);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/pginformacionvs/${selectedId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: selectedId,\r\n                    content: quill.root.innerHTML,\r\n                    recurso1: recurso1,\r\n                    recurso2: recurso2,\r\n                    categoria: categoria,\r\n                    title: title\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const verificador = window.location.pathname.split('/');\r\n                const rptAPI = verificador[verificador.length - 1];\r\n                fetch('http://localhost:3001/pginformacionvs')\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                        setDatos(filtrado);\r\n                        setBanners(rptAPI);\r\n                    })\r\n                    .catch(error => console.error('Tenemos un error', error));\r\n            } else {\r\n                console.error('Error al actualizar la información.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n        fetch('http://localhost:3001/pginformacionvs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacionvs/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacionvs')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((item, index) => (\r\n                        <Card className='mb-3' key={index}>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(item.id, item.content, item.recurso1, item.recurso2, item.categoria, item.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(item.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <div className='row'>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            {item.content && (\r\n                                                <div dangerouslySetInnerHTML={{ __html: item.content }} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            <div className='row'>\r\n                                                {datos.map((item, index) => (<Row className='m-0 p-5' key={index}>\r\n                                                    <div className=\"col-md-7 col-lg-7 mb-1\">\r\n                                                        <div className='carousel slide p-2 h-100 w-100 borderProyect'>\r\n                                                            <Slider ref={sliderRef} {...settings}>\r\n                                                                {item.recurso1 && item.recurso1.split(',').map((path, i) => (\r\n                                                                    <div key={i}>\r\n                                                                        <img src={path.trim()} alt={item.texto} className=\"w-100 h-100\" />\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </Slider>\r\n                                                            <div>\r\n                                                                <button className=\"carousel-control-prev\" onClick={prevSlide}>\r\n                                                                    <span className=\"carousel-control-prev-icon bgProyect\" aria-hidden=\"true\"></span>\r\n                                                                    <span className=\"visually-hidden\">Previous</span>\r\n                                                                </button>\r\n                                                                <button className=\"carousel-control-next\" onClick={nextSlide}>\r\n                                                                    <span className=\"carousel-control-next-icon bgProyect\" aria-hidden=\"true\"></span>\r\n                                                                    <span className=\"visually-hidden\">Next</span>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5 col-lg-5 mb-1\">\r\n                                                        <div className=\"p-2 position-relative h-100 borderProyect\" style={{ height: '100%', width: '100%'}}>\r\n                                                            <iframe src={item.recurso2} className=\"w-100 h-100\" style={{ border: 'none', borderRadius: 'inherit' }} allowFullScreen></iframe>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Row>))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"m-1 mt-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='form-control' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Titulo:</label>\r\n                                                <input type='text' className='form-control' id='title' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Categoria:</label>\r\n                                                <input type='text' className='form-control' id='categoria' disabled value={categoria} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-6 col-6 \">\r\n                                                <label htmlFor='recurso1'>Imagen o Video:</label>\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 1 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso1' value={recurso1}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <label htmlFor='recurso2'>Imagen o Video:</label><br />\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 2 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso2' value={recurso2}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Servicioeditable","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacion.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs\\crudinfo.tsx",["779","780"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst VScrudinfo = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        categoria: '',\r\n        titulo: '',\r\n        texto: '',\r\n        imagen: '',\r\n        estado: ''\r\n\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.texto.toLowerCase().includes(searchTerm.toLowerCase()) || fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/serviciosES')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/serviciosES/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    imagen: data.imagen,\r\n                    estado: data.estado\r\n\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/serviciosES/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/serviciosES', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/serviciosES/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/serviciosES')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <br />\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"mb-4 mb-lg-0\">\r\n                                <br />\r\n                                <div className='row text-end'>\r\n                                    <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                        <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <Button onClick={() => setLgShow(true)}>REGISTRAR</Button>{' '}\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <Table hover responsive className=\"scroll text-nowrap\">\r\n                                    <thead >\r\n                                        <tr className='table-secondary'>\r\n                                            <th scope=\"col\">Id</th>\r\n                                            <th scope=\"col\">Categoria</th>\r\n                                            <th scope=\"col\">Titulo</th>\r\n                                            <th scope=\"col\">Texto</th>\r\n                                            <th scope=\"col\">Imagen</th>\r\n                                            <th scope='col'>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredMenus.map((fila, index) => (\r\n                                            <tr key={fila.id}>\r\n                                                <td>{fila.id}</td>\r\n                                                <td>{fila.categoria}</td>\r\n                                                <td>{fila.titulo}</td>\r\n                                                <td><textarea className='form-control no-scroll' value={fila.texto} style={{ width: '350px', border: 'none', overflowY: 'hidden', backgroundColor: 'white' }} disabled /></td>\r\n                                                <td><img src={fila.imagen} className='img-thumbnail' /></td>\r\n                                                <td>\r\n                                                    <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                    <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-6 col-sm-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <div className='form-check form-switch '>\r\n                                                <label className=\"form-check-label\" style={{ alignItems: 'center' }}>Mostrar el contenido</label>\r\n                                                <input className=\"form-check-input\" style={{ marginRight: '5px', alignItems: 'center', fontSize: '16px' }} type=\"checkbox\" role=\"switch\"\r\n                                                    checked={Boolean(formData.estado)} onChange={(e) => handleInputChange('estado', e.target.checked)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className='mb-3'>\r\n                                        <div className=\"col-md-6 col-sm-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Categoria\" value={formData.categoria} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className='col-md-12 col-12 text-center'>\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Imagen: /ruta/imagen.png\" value={formData.imagen} onChange={(e) => handleInputChange('imagen', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VScrudinfo","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs\\informacionvs.tsx",["781"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst VSinformacion = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const [recurso1, setRecurso1] = useState();\r\n    const [recurso2, setRecurso2] = useState();\r\n    const [categoria, setCategoria] = useState();\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    const sliderRef = React.useRef(null);\r\n    const nextSlide = () => {\r\n        sliderRef.current.slickNext();\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        sliderRef.current.slickPrev();\r\n    };\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        switch (id) {\r\n            case 'id':\r\n                setSelectedId(value);\r\n                break;\r\n            case 'recurso1':\r\n                setRecurso1(value);\r\n                break;\r\n            case 'recurso2':\r\n                setRecurso2(value);\r\n                break;\r\n            case 'categoria':\r\n                setRecurso2(value);\r\n                break;\r\n            default:\r\n                setTitle(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n\r\n    const handleLinkClick = (id, content, recurso1, recurso2, categoria, title) => {\r\n        setRecurso1(recurso1);\r\n        setRecurso2(recurso2);\r\n        setInsertText(content);\r\n        setCategoria(categoria);\r\n        setTitle(title);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/pginformacionvs/${selectedId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: selectedId,\r\n                    content: quill.root.innerHTML,\r\n                    recurso1: recurso1,\r\n                    recurso2: recurso2,\r\n                    categoria: categoria,\r\n                    title: title\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const rptAPI = 'informacion';\r\n                fetch('http://localhost:3001/pginformacionvs')\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                        setDatos(filtrado);\r\n                        setBanners(rptAPI);\r\n                    })\r\n                    .catch(error => console.error('Tenemos un error', error));\r\n            } else {\r\n                console.error('Error al actualizar la información.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const rptAPI = 'informacion';\r\n        fetch('http://localhost:3001/pginformacionvs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacionvs/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacionvs')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3' key={index}>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.recurso1, fila.recurso2, fila.categoria, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <div className='row'>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            {fila.content && (\r\n                                                <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12'>\r\n                                            <div className='row'>\r\n                                                <div className=\"container\">\r\n                                                        <Row className=\"mb-1\">\r\n                                                            <div className=\"col-md-7 col-lg-7 mb-1\">\r\n                                                                <div className='carousel slide p-2 h-100 w-100' style={{ border: '2px solid #b08833' }}>\r\n                                                                    <Slider ref={sliderRef} {...settings}>\r\n                                                                        {fila.recurso1 && fila.recurso1.split(',').map((path, i) => (\r\n                                                                            <div key={i}>\r\n                                                                                <img src={path.trim()} alt={fila.texto} className=\"w-100 h-100\" />\r\n                                                                            </div>\r\n                                                                        ))}\r\n                                                                    </Slider>\r\n                                                                    <div>\r\n                                                                        <button className=\"carousel-control-prev\" onClick={prevSlide}>\r\n                                                                            <span className=\"carousel-control-prev-icon bgProyect2\" aria-hidden=\"true\"></span>\r\n                                                                            <span className=\"visually-hidden\">Previous</span>\r\n                                                                        </button>\r\n                                                                        <button className=\"carousel-control-next\" onClick={nextSlide}>\r\n                                                                            <span className=\"carousel-control-next-icon bgProyect2\" aria-hidden=\"true\"></span>\r\n                                                                            <span className=\"visually-hidden\">Next</span>\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-5 col-lg-5 mb-1\">\r\n                                                                <div className=\"borderProyect2 p-2 position-relative h-100\" style={{ height: '100%', width: '100%' }}>\r\n                                                                    <iframe src={fila.recurso2} className=\"w-100 h-100\" style={{ border: 'none', borderRadius: 'inherit' }} allowFullScreen></iframe>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Row>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"m-1 mt-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='form-control' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Titulo:</label>\r\n                                                <input type='text' className='form-control' id='title' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-4 col-4\">\r\n                                                <label htmlFor='title'>Categoria:</label>\r\n                                                <input type='text' className='form-control' id='categoria' disabled value={categoria} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-6 col-6 \">\r\n                                                <label htmlFor='recurso1'>Imagen o Video:</label>\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 1 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso1' value={recurso1}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <label htmlFor='recurso2'>Imagen o Video:</label><br />\r\n                                                <input\r\n                                                    type='text'\r\n                                                    placeholder='para la 2 columna'\r\n                                                    className='form-control'\r\n                                                    id='recurso2' value={recurso2}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VSinformacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\informacionvs.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\menus.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\navBar.tsx",["782","783","784","785","786","787","788","789","790"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport CNavbar from '../components/estructura/navbar';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst navbar = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [selMenu, setSelMenu] = useState('informacion');\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        href: '',\r\n        categoria: '',\r\n        texto: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.texto.toLowerCase().includes(searchTerm.toLowerCase()) || fila.href.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgmenugb')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgmenugb/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    href: data.href,\r\n                    categoria: data.categoria,\r\n                    texto: data.texto\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgmenugb/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgmenu', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgmenugb/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgmenugb')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    const handleClearText = () => {\r\n        setFormData({\r\n            id: '',\r\n            href: '',\r\n            categoria: '',\r\n            texto: ''\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <br />\r\n                <Row className=\"mb-5 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Header className=' fw-bold'>VISTA PREVIA DEL NAVBAR</Card.Header>\r\n                            <Card.Body>\r\n                                <ul className=\"nav flex-column flex-sm-row justify-content-center bg-white p-2 overflow-auto\">\r\n                                    <div className=\"d-flex flex-nowrap align-items-center justify-content-center justify-content-lg-start\">\r\n                                        {datos.map((fila, index) => (\r\n                                            <li key={index} className=\"nav-item fw-bold\">\r\n                                                {fila.texto === 'Logo' ? (\r\n                                                    <img src={fila.href} alt=\"Logo\" style={{ zoom: '0.5' }} />\r\n                                                ) : (\r\n                                                    <a className={`nav-link custom-sombra fs-4 ${selMenu.toLowerCase() === fila.texto.toLowerCase() ? 'text-light active bgProyect mx-2 rounded-5' : 'text-dark'}`} href=\"#\">\r\n                                                        {fila.texto}\r\n                                                    </a>\r\n                                                )}\r\n                                            </li>\r\n                                        ))}\r\n                                    </div>\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row className=\"mb-8 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <div className='row text-end'>\r\n                                    <div className='col-md-8 col-lg-8 col-xs-8'>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                        <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div className=\"mb-4 mb-lg-0\">\r\n                                    <Table hover responsive className=\"scroll text-nowrap\">\r\n                                        <thead >\r\n                                            <tr className='table-light' >\r\n                                                <th scope=\"col\">Id</th>\r\n                                                <th scope=\"col\">Ruta</th>\r\n                                                <th scope=\"col\">Texto</th>\r\n                                                <th scope='col'>Acciones</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {filteredMenus.map((fila, index) => (\r\n                                                <tr key={fila.id}>\r\n                                                    <td>{fila.id}</td>\r\n                                                    <td>{fila.href}</td>\r\n                                                    <td>{fila.texto}</td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                        <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Fragment>\r\n                    <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                <h4 ><strong>MANTENIMIENTO: </strong> NavBar</h4>\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                                <div>\r\n                                    <Form>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-sm-6 col-lg-6\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                            </div>\r\n                                            {formData.texto === 'Logo' ? (\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} disabled />\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} />\r\n                                                </div>\r\n                                            )}\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Ruta\" value={formData.href} onChange={(e) => handleInputChange('href', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n\r\n                                        <Row className=\"mb-3 text-end\">\r\n                                            <Col md={12} xs={12}>\r\n                                                <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                                &nbsp;\r\n                                                <Button className=\"btn btn-primary\" type=\"reset\" onClick={() => handleClearText()}>LIMPIAR</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                </Fragment>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default navbar","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\navBarvs.tsx",["791","792","793","794","795","796","797","798","799"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst navbarvs = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [selMenu, setSelMenu] = useState('informacion');\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        href: '',\r\n        texto: '',\r\n        icon: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.texto.toLowerCase().includes(searchTerm.toLowerCase()) || fila.href.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgmenuvs')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgmenuvs/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    href: data.href,\r\n                    texto: data.texto,\r\n                    icon: data.icon,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgmenuvs/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgmenuvs', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgmenuvs/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgmenuvs')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n    };\r\n    const handleClearClick = () => {\r\n        setFormData({\r\n            id: '',\r\n            href: '',\r\n            texto: '',\r\n            icon: '',\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <br />\r\n                <Row className=\"mb-5 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Header className=' fw-bold'>VISTA PREVIA DEL NAVBAR</Card.Header>\r\n                            <Card.Body>\r\n                                <ul className=\"nav flex-column flex-sm-row justify-content-center bg-white p-2 overflow-auto\">\r\n                                    <div className=\"d-flex flex-nowrap align-items-center justify-content-center justify-content-lg-start\">\r\n                                        {datos.map((fila, index) => (\r\n                                            <li key={index} className=\"nav-item fw-bold\">\r\n                                                {fila.texto === 'Logo' ? (\r\n                                                    <img src={fila.href} alt=\"Logo\" style={{ zoom: '0.4' }} className='mx-2' />\r\n                                                ) : (\r\n                                                    <a className={`nav-link custom-sombra2 fs-4 ${selMenu.toLowerCase() === fila.texto.toLowerCase() ? 'text-light active bgProyect2 mx-2 rounded-5' : 'text-dark'}`} href=\"#\">\r\n                                                        {fila.texto}\r\n                                                    </a>\r\n                                                )}\r\n                                            </li>\r\n                                        ))}\r\n                                    </div>\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <div className='row text-end'>\r\n                                        <div className='col-md-8 col-lg-8 col-xs-8'>\r\n                                            &nbsp;\r\n                                        </div>\r\n                                        <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                            <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Title>\r\n                                <div className=\"mb-4 mb-lg-0\">\r\n                                    <Table hover responsive className=\"scroll text-nowrap\">\r\n                                        <thead >\r\n                                            <tr className='table-secondary'>\r\n                                                <th scope=\"col\">Id</th>\r\n                                                <th scope=\"col\">Ruta</th>\r\n                                                <th scope=\"col\">Texto</th>\r\n                                                <th scope='col'>Acciones</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {filteredMenus.map((fila, index) => (\r\n                                                <tr key={fila.id}>\r\n                                                    <td>{fila.id}</td>\r\n                                                    <td>{fila.href}</td>\r\n                                                    <td>{fila.texto}</td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                        <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Fragment>\r\n                    <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                <h4 ><strong>MANTENIMIENTO: </strong> NavBar</h4>\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                                <div>\r\n                                    {/* border */}\r\n                                    <Form>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-sm-6 col-lg-6\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-md-6 col-6\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} disabled={formData.texto === 'Logo'} />\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Ruta\" value={formData.href} onChange={(e) => handleInputChange('href', e.target.value)} />\r\n                                            </div>\r\n                                        </Row>\r\n\r\n                                        <Row className=\"mb-3 text-end\">\r\n\r\n                                            <Col md={12} xs={12}>\r\n                                                <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                                &nbsp;\r\n                                                <Button className=\"btn btn-primary\" type=\"reset\" onClick={() => handleClearClick()}>LIMPIAR</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Form>\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                </Fragment>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default navbarvs","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\page.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\plano.tsx",["800","801","802","803","804","805","806","807"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nconst plano = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        coordenadas: '',\r\n        color: '',\r\n        lote: '',\r\n        manzana: '',\r\n        areaLote: '',\r\n        referencia: '',\r\n        precio: '',\r\n        estado: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.id.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgconfiplanobg')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const handleRegistrarClick = () => {\r\n        setLgShow(true)\r\n        setFormData({\r\n            id: '',\r\n            coordenadas: '',\r\n            color: '',\r\n            lote: '',\r\n            manzana: '',\r\n            areaLote: '',\r\n            referencia: '',\r\n            precio: '',\r\n            estado: ''\r\n        });\r\n\r\n    }\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgconfiplanobg/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    coordenadas: data.coordenadas,\r\n                    color: data.color,\r\n                    lote: data.lote,\r\n                    manzana: data.manzana,\r\n                    areaLote: data.areaLote,\r\n                    referencia: data.referencia,\r\n                    precio: data.precio,\r\n                    estado: data.estado\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgconfiplanobg/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgconfiplanobg', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgconfiplanobg/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgconfiplanobg')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleClearClick = () => {\r\n        setFormData({\r\n            id: '',\r\n            coordenadas: '',\r\n            color: '',\r\n            lote: '',\r\n            manzana: '',\r\n            areaLote: '',\r\n            referencia: '',\r\n            precio: '',\r\n            estado: ''\r\n        });\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-3 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">PAGINA PLANO</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del slider como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        ÁREA DEL PLANO\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n\r\n                    <br />\r\n                    <Row className=\"mb-8 m-1\">\r\n                        <Col xl={12} lg={12} md={12} xs={12}>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <div className=\"mb-4 mb-lg-0\">\r\n                                        <div className='row text-end'>\r\n                                            <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                                &nbsp;\r\n                                            </div>\r\n                                            <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                                <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                            </div>\r\n                                            <div className='col'>\r\n                                                <Button onClick={() => handleRegistrarClick()}>REGISTRAR</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <Table hover responsive className=\"scroll text-nowrap\">\r\n                                            <thead >\r\n                                                <tr className='table-secondary'>\r\n                                                    <th scope=\"col\">#</th>\r\n                                                    <th scope=\"col\">Id</th>\r\n                                                    <th scope='col'>Lote</th>\r\n                                                    <th scope='col'>Manzana</th>\r\n                                                    <th scope='col'>Area Lote</th>\r\n                                                    <th scope='col'>Referencia</th>\r\n                                                    <th scope='col'>Precio</th>\r\n                                                    <th scope=\"col\">Coordenadas</th>\r\n                                                    <th scope=\"col\">Color</th>\r\n                                                    <th scope=\"col\">Estado</th>\r\n                                                    <th scope='col'>Acciones</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {filteredMenus.map((fila, index) => (\r\n                                                    <tr key={fila.id}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{fila.id}</td>\r\n                                                        <td>{fila.lote}</td>\r\n                                                        <td>{fila.manzana}</td>\r\n                                                        <td>{fila.areaLote}</td>\r\n                                                        <td>{fila.referencia}</td>\r\n                                                        <td>S/. {fila.precio}</td>\r\n                                                        <td>{fila.coordenadas}</td>\r\n                                                        <td>{fila.color}</td>\r\n                                                        <td>{fila.estado}</td>\r\n                                                        <td>\r\n                                                            <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                            <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Fragment>\r\n                        <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                    <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-sm-6 col-lg-6\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Estado\" value={formData.estado} onChange={(e) => handleInputChange('estado', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-sm-4 col-lg-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Lote\" value={formData.lote} onChange={(e) => handleInputChange('lote', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-4 col-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Manzana\" value={formData.manzana} onChange={(e) => handleInputChange('manzana', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-4 col-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Área Lote\" value={formData.areaLote} onChange={(e) => handleInputChange('areaLote', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-12 col-12\">\r\n                                                    <select className=\"form-select\" value={formData.color} onChange={(e) => handleInputChange('color', e.target.value)}>\r\n                                                        <option value=\"\">Seleccionar la categoria del estado</option>\r\n                                                        <option value=\"rgba(220, 53, 70, 0.504)\">Vendido</option>\r\n                                                        <option value=\"rgba(77, 203, 92, 0.497)\">Disponible</option>\r\n                                                        <option value=\"rgba(99, 115, 129, 0.51)\">Separado</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </Row>\r\n\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-12 col-12\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Referencia\" value={formData.referencia} onChange={(e) => handleInputChange('referencia', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"number\" placeholder=\"Precio\" value={formData.precio} onChange={(e) => handleInputChange('precio', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Coordenadas\" value={formData.coordenadas} onChange={(e) => handleInputChange('coordenadas', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3 text-end\">\r\n                                                <Col md={12} xs={12}>\r\n                                                    <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                                    &nbsp;\r\n                                                    <Button className=\"btn btn-primary\" type=\"reset\" onClick={() => handleClearClick()}>LIMPIAR</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </Form>\r\n                                    </div>\r\n\r\n                                </Col>\r\n                            </Modal.Body>\r\n\r\n                        </Modal>\r\n                    </Fragment>\r\n\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default plano","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\planovs.tsx",["808","809","810","811","812","813","814","815"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nconst plano = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        coordenadas: '',\r\n        color: '',\r\n        lote: '',\r\n        manzana: '',\r\n        areaLote: '',\r\n        referencia: '',\r\n        precio: '',\r\n        estado: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.id.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgconfiplanovs')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const handleRegistrarClick = () => {\r\n        setLgShow(true)\r\n        setFormData({\r\n            id: '',\r\n            coordenadas: '',\r\n            color: '',\r\n            lote: '',\r\n            manzana: '',\r\n            areaLote: '',\r\n            referencia: '',\r\n            precio: '',\r\n            estado: ''\r\n        });\r\n\r\n    }\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgconfiplanovs/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    coordenadas: data.coordenadas,\r\n                    color: data.color,\r\n                    lote: data.lote,\r\n                    manzana: data.manzana,\r\n                    areaLote: data.areaLote,\r\n                    referencia: data.referencia,\r\n                    precio: data.precio,\r\n                    estado: data.estado\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgconfiplanovs/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgconfiplanovs', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgconfiplanovs/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgconfiplanovs')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n    };\r\n    const handleClearClick = () => {\r\n        setFormData({\r\n            id: '',\r\n            coordenadas: '',\r\n            color: '',\r\n            lote: '',\r\n            manzana: '',\r\n            areaLote: '',\r\n            referencia: '',\r\n            precio: '',\r\n            estado: ''\r\n        });\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-3 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">VILLA SIPAN: PÁGINA PLANO</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del slider como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        ÁREA DEL PLANO\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n\r\n                    <br />\r\n                    <Row className=\"mb-8 m-1\">\r\n                        <Col xl={12} lg={12} md={12} xs={12}>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <div className=\"mb-4 mb-lg-0\">\r\n                                        <div className='row text-end'>\r\n                                            <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                                &nbsp;\r\n                                            </div>\r\n                                            <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                                <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                            </div>\r\n                                            <div className='col'>\r\n                                                <Button onClick={() => handleRegistrarClick()}>REGISTRAR</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <Table hover responsive className=\"scroll text-nowrap\">\r\n                                            <thead >\r\n                                                <tr className='table-secondary'>\r\n                                                    <th scope=\"col\">#</th>\r\n                                                    <th scope=\"col\">Id</th>\r\n                                                    <th scope='col'>Lote</th>\r\n                                                    <th scope='col'>Manzana</th>\r\n                                                    <th scope='col'>Area Lote</th>\r\n                                                    <th scope='col'>Referencia</th>\r\n                                                    <th scope='col'>Precio</th>\r\n                                                    <th scope=\"col\">Coordenadas</th>\r\n                                                    <th scope=\"col\">Color</th>\r\n                                                    <th scope=\"col\">Estado</th>\r\n                                                    <th scope='col'>Acciones</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {filteredMenus.map((fila, index) => (\r\n                                                    <tr key={fila.id}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{fila.id}</td>\r\n                                                        <td>{fila.lote}</td>\r\n                                                        <td>{fila.manzana}</td>\r\n                                                        <td>{fila.areaLote}</td>\r\n                                                        <td>{fila.referencia}</td>\r\n                                                        <td>S/. {fila.precio}</td>\r\n                                                        <td>{fila.coordenadas}</td>\r\n                                                        <td>{fila.color}</td>\r\n                                                        <td>{fila.estado}</td>\r\n                                                        <td>\r\n                                                            <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                            <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Fragment>\r\n                        <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                    <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-sm-6 col-lg-6\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Estado\" value={formData.estado} onChange={(e) => handleInputChange('estado', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-sm-4 col-lg-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Lote\" value={formData.lote} onChange={(e) => handleInputChange('lote', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-4 col-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Manzana\" value={formData.manzana} onChange={(e) => handleInputChange('manzana', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-4 col-4\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Área Lote\" value={formData.areaLote} onChange={(e) => handleInputChange('areaLote', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-12 col-12\">\r\n                                                    <select className=\"form-select\" value={formData.color} onChange={(e) => handleInputChange('color', e.target.value)}>\r\n                                                        <option value=\"\">Seleccionar la categoria del estado</option>\r\n                                                        <option value=\"rgba(50, 145, 247, 0.486)\">Vendido</option>\r\n                                                        <option value=\"rgba(255, 255, 255, 0)\">Disponible</option>\r\n                                                        <option value=\"rgba(255, 255, 255, 0)\">Separado</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </Row>\r\n\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-12 col-12\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Referencia\" value={formData.referencia} onChange={(e) => handleInputChange('referencia', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Precio\" value={formData.precio} onChange={(e) => handleInputChange('precio', e.target.value)} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 col-6\">\r\n                                                    <input className=\"form-control\" type=\"text\" placeholder=\"Coordenadas\" value={formData.coordenadas} onChange={(e) => handleInputChange('coordenadas', e.target.value)} />\r\n                                                </div>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3 text-end\">\r\n                                                <Col md={12} xs={12}>\r\n                                                    <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                                    &nbsp;\r\n                                                    <Button className=\"btn btn-primary\" type=\"reset\" onClick={() => handleClearClick()}>LIMPIAR</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </Form>\r\n                                    </div>\r\n\r\n                                </Col>\r\n                            </Modal.Body>\r\n\r\n                        </Modal>\r\n                    </Fragment>\r\n\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default plano","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\crudtexto.tsx",["816"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from './toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst Crudtexto = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content) => {\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pginformacion';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pginformacion')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pginformacion')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacion/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacion')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={6} lg={6} md={6} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <p> {fila.content && (\r\n                                        <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                    )}</p>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n\r\n                <Col xl={6} lg={6} md={6} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Crudtexto","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\textoeditable.tsx",["817"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from './toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst Textoeditable = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content, insertText) => {\r\n        setTitle(insertText);\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pgtimeline';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pgtimeline')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgtimeline')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pgtimeline/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pgtimeline')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <Accordion>\r\n                                        <Accordion.Item eventKey=\"0\" style={{ border: 'none', marginBottom: '10px' }} key={index}>\r\n                                            <Accordion.Header style={{ border: '1px solid lightgray', borderRadius: '7px', paddingTop: '3px', paddingBottom: '3px', width: '50%' }}>\r\n                                                <strong> {fila.title}</strong>\r\n                                            </Accordion.Header>\r\n                                            <Accordion.Body>\r\n                                                <div className='row'>\r\n                                                    {fila.content && (\r\n                                                         <div dangerouslySetInnerHTML={{ __html: fila.content }} className='image-row'/>\r\n                                                    )}\r\n                                                </div>\r\n\r\n                                            </Accordion.Body>\r\n                                        </Accordion.Item>\r\n                                    </Accordion>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className='mb-8 m-1'>\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Textoeditable","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline\\toolbar.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timeline.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs\\crudtimeline.tsx",["818"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst VScrudtimeline = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [banners, setBanners] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content) => {\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pginformacion';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pginformacion')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pginformacion')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pginformacion/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pginformacion')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={6} lg={6} md={6} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <p> {fila.content && (\r\n                                        <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                    )}</p>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n\r\n                <Col xl={6} lg={6} md={6} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VScrudtimeline","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs\\infotimeline.tsx",["819"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuill } from 'react-quilljs';\r\nimport toolbar from '../timeline/toolbar'\r\nimport 'quill/dist/quill.snow.css'\r\n\r\nconst VSinfotimeline = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selectedId, setSelectedId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [insertText, setInsertText] = useState('');\r\n    const { quill, quillRef } = useQuill({\r\n        modules: {\r\n            toolbar: toolbar,\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleLinkClick = (id, content, insertText) => {\r\n        setTitle(insertText);\r\n        setInsertText(content);\r\n        setSelectedId(id);\r\n        if (quill) {\r\n            quill.clipboard.dangerouslyPasteHTML(content);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let apiUrl = 'http://localhost:3001/pgtimeline';\r\n            let method = 'POST';\r\n            if (selectedId) {\r\n                apiUrl += `/${selectedId}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    content: quill.root.innerHTML,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(`Información ${selectedId ? 'actualizada' : 'guardada'} con éxito.`);\r\n                fetch('http://localhost:3001/pgtimeline')\r\n                    .then(response => response.json())\r\n                    .then(data => setDatos(data))\r\n                    .catch(error => console.error('Error al obtener datos:', error));\r\n            } else {\r\n                console.error(`Error al ${selectedId ? 'actualizar' : 'guardar'} la información.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error de red:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgtimeline')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n    const procesarContenidoQuill = (contenidoQuill) => {\r\n        return contenidoQuill;\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        fetch(`http://localhost:3001/pgtimeline/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    fetch('http://localhost:3001/pgtimeline')\r\n                        .then(response => response.json())\r\n                        .then(data => setDatos(data))\r\n                        .catch(error => console.error('Error al obtener datos:', error));\r\n                } else {\r\n                    console.error('Error al eliminar el registro.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error de red:', error);\r\n            });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        const shouldDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este registro?\");\r\n\r\n        if (shouldDelete) {\r\n            handleDeleteClick(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    {datos.map((fila, index) => (\r\n                        <Card className='mb-3'>\r\n                            <Card.Body>\r\n                                <div className='row'>\r\n                                    <Row className=\"mb-1 align-items-center justify-content-end\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleLinkClick(fila.id, fila.content, fila.title)} ><i className='fe fe-edit fa-md'></i></button>\r\n                                        </div>|\r\n                                        <div className=\"col-auto\">\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => confirmDelete(fila.id)}>\r\n                                                <i className=\"fe fe-trash fa-md\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <hr />\r\n                                    <Accordion>\r\n                                        <Accordion.Item eventKey=\"0\" style={{ border: 'none', marginBottom: '10px' }} key={index}>\r\n                                            <Accordion.Header style={{ border: '1px solid lightgray', borderRadius: '7px', paddingTop: '3px', paddingBottom: '3px', width: '50%' }}>\r\n                                                <strong> {fila.title}</strong>\r\n                                            </Accordion.Header>\r\n                                            <Accordion.Body>\r\n                                                <div className='row '>\r\n                                                    {fila.content && (\r\n                                                        <div dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n                                                    )}\r\n                                                </div>\r\n                                            </Accordion.Body>\r\n                                        </Accordion.Item>\r\n                                    </Accordion>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className='mb-8 m-1'>\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className='row'>\r\n                                <div className=\"container\">\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <Row className=\"mb-1\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <label htmlFor='title'>Identificador Único:</label>\r\n                                                <input type='text' className='p-2 border-0 rounded-2' id='id' value={selectedId} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <input type='text' placeholder='Escriba un título' className='p-2 bg-secondary text-light accordion-button rounded-2' id='value' value={title} onChange={handleChange}></input>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12\">\r\n                                                <div className='editor'>\r\n                                                    <div ref={quillRef}></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                        <Row className=\"mb-3\">\r\n                                            <div className=\"col-md-12 col-12 text-end\">\r\n                                                <button className='btn btn-primary'>Guardar</button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VSinfotimeline","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\timelinevs.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion\\crudubicacion.tsx",["820","821","822","823","824","825","826","827","828"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst crudubicacion = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [ubicacion, setUbicacion] = useState('');\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        categoria: '',\r\n        titulo: '',\r\n        texto: '',\r\n        estado: '',\r\n        imagen: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const url = verificador[verificador.length - 1];\r\n        fetch('http://localhost:3001/serviciosES')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === url);\r\n                setDatos(filtrado);\r\n                setUbicacion(url);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n    const handleRegistrarClick = () => {\r\n        setLgShow(true);\r\n        setFormData({\r\n            id: '',\r\n            categoria: '',\r\n            titulo: '',\r\n            texto: '',\r\n            estado: '',\r\n            imagen: ''\r\n        });\r\n    }\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/serviciosES/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    estado: data.estado,\r\n                    imagen: data.imagen\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n    const handleEnviarIdClick = (id) => {\r\n        setEditItemId(id);\r\n        fetch(`http://localhost:3001/serviciosES/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    estado: data.estado,\r\n                    imagen: data.imagen\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    }\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/serviciosES/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/serviciosES', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/serviciosES/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/serviciosES')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n    const handleClearClick = () => {\r\n        setFormData({\r\n            id: '',\r\n            categoria: '',\r\n            titulo: '',\r\n            texto: '',\r\n            estado: '',\r\n            imagen: ''\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 py-2\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-md-7 col-lg-8\">\r\n                                    <div className=\"container px-4 text-center\">\r\n                                        <div className=\"row gx-5\">\r\n                                            <div className=\"accordion\" id=\"accordionExample\">\r\n                                                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\"\r\n                                                    data-bs-parent=\"#accordionExample\">\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6 pe-0\">\r\n                                                            <h1 className=\"fw-bold cProyect\">{formData.titulo}</h1>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 ps-1\">\r\n                                                            <p>{formData.texto}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-12 border borderProyect border-3 p-1\">\r\n                                                            <div className=\"embed-responsive ratio ratio-16x9\">\r\n                                                                <iframe src={formData.imagen} className=\"w-100 h-100\" style={{ border: 'none', borderRadius: 'inherit' }} allowFullScreen></iframe>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5 col-lg-4 p-4\"><br />\r\n                                    <div className=\"no-left-top-shadow rounded-3 \">\r\n                                        <div className=\"accordion \" id=\"accordionExample\">\r\n                                            <div className=\"accordion-item border border-top-1 border-bottom-0 p-1\"><br />\r\n                                                {datos.map((fila, index) => (\r\n                                                    <h4 className=\"accordion-header\">\r\n                                                        <button\r\n                                                            className=\"accordion-button-no-icon collapsed rounded-5 bg-body border-0 focus-ring focus-ring-light px-4\"\r\n                                                            type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\r\n                                                            aria-expanded=\"true\" aria-controls=\"collapseOne\" onClick={() => handleEnviarIdClick(fila.id)}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                                                fill=\"currentColor\" className=\"bi bi-folder-fill crema\"\r\n                                                                viewBox=\"0 0 16 16\">\r\n                                                                <path\r\n                                                                    d=\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z\" />\r\n                                                            </svg>\r\n                                                            <span className=\"px-3 text\" >{fila.estado}</span>\r\n                                                        </button>\r\n                                                    </h4>))}\r\n                                                <br />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"mb-4 mb-lg-0\">\r\n\r\n                                <br />\r\n                                <div className='row text-end'>\r\n                                    <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                        <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <Button onClick={() => handleRegistrarClick()}>REGISTRAR</Button>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <Table hover responsive className=\"scroll text-nowrap\">\r\n                                    <thead >\r\n                                        <tr className='table-secondary'>\r\n                                            <th scope=\"col\">Id</th>\r\n                                            <th scope=\"col\">Categoria</th>\r\n                                            <th scope=\"col\">Titulo</th>\r\n                                            <th scope=\"col\">Descripcion</th>\r\n                                            <th scope='col'>Titulo</th>\r\n                                            <th scope='col'>Imagen</th>\r\n                                            <th scope='col'>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredMenus.map((fila, index) => (\r\n                                            <tr key={fila.id}>\r\n                                                <td>{fila.id}</td>\r\n                                                <td>{fila.categoria}</td>\r\n                                                <td>{fila.titulo}</td>\r\n                                                <td>{fila.texto}</td>\r\n                                                <td>{fila.estado}</td>\r\n                                                <td>{fila.imagen}</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                    <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong>UBICACION</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                {/* border */}\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-sm-6 col-lg-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Categoria\" value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"estado\" value={formData.estado} onChange={(e) => handleInputChange('estado', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"imagen\" value={formData.imagen} onChange={(e) => handleInputChange('imagen', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" onClick={() => handleClearClick()}>LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default crudubicacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion\\infoubicacion.tsx",["829"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Infoubicacion = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        boton1: '',\r\n        ruta1: '',\r\n        boton2: '',\r\n        ruta2: '',\r\n        iframe: '',\r\n        titulo: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgubicaciongb')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgubicaciongb/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    boton1: data.boton1,\r\n                    ruta1: data.ruta1,\r\n                    boton2: data.boton2,\r\n                    ruta2: data.ruta2,\r\n                    iframe: data.iframe,\r\n                    titulo: data.titulo\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgubicaciongb/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgubicaciongb', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgubicaciongb/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgubicaciongb')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 py-2\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n\r\n                        <Card.Body>\r\n                            {datos.map((fila, index) => (\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-7 col-lg-8\">\r\n                                        <h2 className=\"fw-bold cProyect\">{fila.titulo}</h2>\r\n                                        <div className=\"container mt-4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"d-grid gap-2 d-md-block pb-3\">\r\n                                                    <a href={fila.ruta1} target='_blank'> <button className=\"btn bgProyect text-light fw-bold\" type=\"button\">{fila.boton1}</button></a>&nbsp;\r\n                                                    <a href={fila.ruta2} target='_blank'><button className=\"btn btn-secondary fw-bold\" type=\"button\">{fila.boton2}</button></a>\r\n                                                </div>\r\n                                                <iframe src={fila.iframe} width=\"600\" height=\"450\" loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-5 col-lg-4 border border-1 py-2\">\r\n                                        <Card.Title className='text-end'>\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-md\"></i>   </button>{' '}|\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => handleDeleteClick(fila.id)}><i className=\"fe fe-trash fa-md\"></i></button>{' '}\r\n                                            <hr />\r\n                                        </Card.Title>\r\n\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                           {fila.id}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.titulo}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.boton1}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.ruta1}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.boton2}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.ruta2}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.iframe}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-sm-6 col-lg-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Boton 1\" value={formData.boton1} onChange={(e) => handleInputChange('boton1', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enlace 1\" value={formData.ruta1} onChange={(e) => handleInputChange('ruta1', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Boton 2\" value={formData.boton2} onChange={(e) => handleInputChange('boton2', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Boton 2\" value={formData.ruta2} onChange={(e) => handleInputChange('ruta2', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Mapa\" value={formData.iframe} onChange={(e) => handleInputChange('iframe', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Infoubicacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacion.tsx",["830","831"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Crudubicacion from './ubicacion/crudubicacion';\r\nimport Infoubicacion from './ubicacion/infoubicacion';\r\n\r\n\r\nconst ubicacion = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-4 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">PAGINA UBICACION</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar la página ubicacion como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        DESCRIPCION\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'paginas' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('paginas')}\r\n                                    >\r\n                                        ARCHIVOS\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    {seccionActiva === 'home' && <Infoubicacion />}\r\n                    {seccionActiva === 'paginas' && <Crudubicacion />}\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ubicacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs\\crudubicacion.tsx",["832"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst VScrudubicacion = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [ubicacion, setUbicacion] = useState('');\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        categoria: '',\r\n        titulo: '',\r\n        texto: '',\r\n        estado: '',\r\n        imagen: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        const url = 'ubicacion';\r\n        fetch('http://localhost:3001/pgserviciosvs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === url);\r\n                setDatos(filtrado);\r\n                setUbicacion(url);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgserviciosvs/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    estado: data.estado,\r\n                    imagen: data.imagen\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n    const handleEnviarIdClick = (id) => {\r\n        setEditItemId(id);\r\n        fetch(`http://localhost:3001/pgserviciosvs/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            setFormData({\r\n                id: data.id,\r\n                categoria: data.categoria,\r\n                titulo: data.titulo,\r\n                texto: data.texto,\r\n                estado: data.estado,\r\n                imagen: data.imagen\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error al obtener datos para editar:', error);\r\n        });\r\n    }\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgserviciosvs/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgserviciosvs', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgserviciosvs/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgserviciosvs')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 py-2\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-md-7 col-lg-8\">\r\n                                    <div className=\"container px-4 text-center\">\r\n                                        <div className=\"row gx-5\">\r\n                                            <div className=\"accordion\" id=\"accordionExample\">\r\n                                                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\"\r\n                                                    data-bs-parent=\"#accordionExample\">\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6 pe-0\">\r\n                                                            <h1 className=\"fw-bold cProyect2\">{formData.titulo}</h1>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6 ps-1\">\r\n                                                            <p>{formData.texto}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-12 object-fit-cover border borderProyect2 border-3 p-1\">\r\n                                                            <video autoPlay src=\"./../../recursosestructura/imagenes/video1.mp4\" className=\"w-100\" ></video>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5 col-lg-4 p-4\"><br />\r\n                                    <div className=\"no-left-top-shadow rounded-3 \">\r\n                                        <div className=\"accordion \" id=\"accordionExample\">\r\n                                            <div className=\"accordion-item border border-top-1 border-bottom-0 p-1\"><br />\r\n                                                {datos.map((fila, index) => (\r\n                                                    <h4 className=\"accordion-header\">\r\n                                                        <button\r\n                                                            className=\"accordion-button-no-icon collapsed rounded-5 bg-body border-0 focus-ring focus-ring-light px-4\"\r\n                                                            type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\r\n                                                            aria-expanded=\"true\" aria-controls=\"collapseOne\" onClick={() => handleEnviarIdClick(fila.id)}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                                                fill=\"currentColor\" className=\"bi bi-folder-fill crema\"\r\n                                                                viewBox=\"0 0 16 16\">\r\n                                                                <path\r\n                                                                    d=\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z\" />\r\n                                                            </svg>\r\n                                                            <span className=\"px-3 text\" >{fila.estado}</span>\r\n                                                        </button>\r\n                                                    </h4>))}\r\n                                                <br />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mb-8 m-1\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"mb-4 mb-lg-0\">\r\n\r\n                                <br />\r\n                                <div className='row text-end'>\r\n                                    <div className='col-md-6 col-lg-6 col-xs-6'>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div className='col-md-4 col-lg-4 col-xs-4 '>\r\n                                        <input type='search' placeholder='Nueva busqueda' className='form-control' onChange={(event) => setSearchTerm(event.target.value)}></input>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <Button onClick={() => setLgShow(true)}>REGISTRAR</Button>{' '}\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <Table hover responsive className=\"scroll text-nowrap\">\r\n                                    <thead >\r\n                                        <tr className='table-secondary'>\r\n                                            <th scope=\"col\">Id</th>\r\n                                            <th scope=\"col\">Categoria</th>\r\n                                            <th scope=\"col\">Titulo</th>\r\n                                            <th scope=\"col\">Descripcion</th>\r\n                                            <th scope='col'>Titulo</th>\r\n                                            <th scope='col'>Imagen</th>\r\n                                            <th scope='col'>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredMenus.map((fila, index) => (\r\n                                            <tr key={fila.id}>\r\n                                                <td>{fila.id}</td>\r\n                                                <td>{fila.categoria}</td>\r\n                                                <td>{fila.titulo}</td>\r\n                                                <td>{fila.texto}</td>\r\n                                                <td>{fila.estado}</td>\r\n                                                <td>{fila.imagen}</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-lg text-light\"></i>   </Button>{' '}\r\n                                                    <Button onClick={() => handleDeleteClick(fila.id)} className='btn-danger'><i className=\"fe fe-trash fa-lg\"></i></Button>{' '}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong>UBICACION</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                {/* border */}\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-sm-6 col-lg-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Categoria\" value={formData.categoria} onChange={(e) => handleInputChange('categoria', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"estado\" value={formData.estado} onChange={(e) => handleInputChange('estado', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"imagen\" value={formData.imagen} onChange={(e) => handleInputChange('imagen', e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4 col-4\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"texto\" value={formData.texto} onChange={(e) => handleInputChange('texto', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VScrudubicacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs\\infoubicacion.tsx",["833"],[],"import Link from 'next/link';\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst VSinformacion = () => {\r\n    const [datos, setDatos] = useState([]);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        boton1: '',\r\n        ruta1: '',\r\n        boton2: '',\r\n        ruta2: '',\r\n        iframe: '',\r\n        titulo: ''\r\n    });\r\n    const handleInputChange = (field, value) => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [field]: value,\r\n        }));\r\n    };\r\n    const filteredMenus = datos.filter((fila) =>\r\n        (fila.titulo.toLowerCase().includes(searchTerm.toLowerCase())));\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgubicacionvs')\r\n            .then(response => response.json())\r\n            .then(data => setDatos(data))\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgubicacionvs/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    boton1: data.boton1,\r\n                    ruta1: data.ruta1,\r\n                    boton2: data.boton2,\r\n                    ruta2: data.ruta2,\r\n                    iframe: data.iframe,\r\n                    titulo: data.titulo\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (editItemId) {\r\n            fetch(`http://localhost:3001/pgubicacionvs/${editItemId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos actualizados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar datos:', error);\r\n                });\r\n\r\n            setEditItemId(null);\r\n        } else {\r\n            fetch('http://localhost:3001/pgubicacionvs', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Datos guardados:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al guardar datos:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        setIdToDelete(id);\r\n\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\"\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n        swalWithBootstrapButtons.fire({\r\n            title: \"¿Seguro de querer eliminar?\",\r\n            text: \"Si elimina, no se puede deshacer los cambios\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Eliminar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación Existosa!\",\r\n                    text: \"Su archivo ha sido eliminado.\",\r\n                    icon: \"success\"\r\n                });\r\n                fetch(`http://localhost:3001/pgubicacionvs/${id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log('Datos guardados:', data);\r\n                        fetch('http://localhost:3001/pgubicacionvs')\r\n                            .then((response) => response.json())\r\n                            .then((menusData) => {\r\n                                setDatos(menusData);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error al actualizar menus:', error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error al guardar datos:', error);\r\n                    });\r\n            } else if (\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: \"Operación cancelada\",\r\n                    text: \"Archivo aún conservado\",\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-5 m-1 py-2\">\r\n                <Col xl={12} lg={12} md={12} xs={12}>\r\n                    <Card>\r\n\r\n                        <Card.Body>\r\n                            {datos.map((fila, index) => (\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-7 col-lg-8\">\r\n                                        <h2 className=\"fw-bold cProyect2\">{fila.titulo}</h2>\r\n                                        <div className=\"container mt-4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"d-grid gap-2 d-md-block pb-3\">\r\n                                                    <a href={fila.ruta1} target='_blank'> <button className=\"btn bgProyect2 text-light fw-bold\" type=\"button\">{fila.boton1}</button></a>&nbsp;\r\n                                                    <a href={fila.ruta2} target='_blank'><button className=\"btn btn-secondary fw-bold\" type=\"button\">{fila.boton2}</button></a>\r\n                                                </div>\r\n                                                <iframe src={fila.iframe} width=\"600\" height=\"450\" loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-5 col-lg-4 border border-1 py-2\">\r\n                                        <Card.Title className='text-end'>\r\n                                            <button type=\"button\" className='bg-white fa-lg text-primary border-0 rounded-3' onClick={() => handleEditClick(fila.id)} >  <i className=\"fe fe-edit fa-md\"></i>   </button>{' '}|\r\n                                            <button type=\"button\" className='bg-white fa-lg text-danger border-0 rounded-3' onClick={() => handleDeleteClick(fila.id)}><i className=\"fe fe-trash fa-md\"></i></button>{' '}\r\n                                            <hr />\r\n                                        </Card.Title>\r\n\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                           {fila.id}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.titulo}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.boton1}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.ruta1}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.boton2}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.ruta2}\r\n                                        </div>\r\n                                        <div className='col-md-12 col-12 border border-1 p-2 rounded rounded-2 mb-1' style={{ backgroundColor: '#F8F9FA' }}>\r\n                                            {fila.iframe}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Fragment>\r\n                <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            <h4 ><strong>MANTENIMIENTO:</strong> Página Menu</h4>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Col xl={12} lg={12} md={12} xs={12} className='p-2'>\r\n                            <div>\r\n                                <Form>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-sm-6 col-lg-6\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Id\" value={formData.id} onChange={(e) => handleInputChange('id', e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-6\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Titulo\" value={formData.titulo} onChange={(e) => handleInputChange('titulo', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Boton 1\" value={formData.boton1} onChange={(e) => handleInputChange('boton1', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enlace 1\" value={formData.ruta1} onChange={(e) => handleInputChange('ruta1', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Boton 2\" value={formData.boton2} onChange={(e) => handleInputChange('boton2', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Boton 2\" value={formData.ruta2} onChange={(e) => handleInputChange('ruta2', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <div className=\"col-md-12 col-12\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Mapa\" value={formData.iframe} onChange={(e) => handleInputChange('iframe', e.target.value)} />\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3 text-end\">\r\n\r\n                                        <Col md={12} xs={12}>\r\n                                            <Button className=\"btn btn-primary\" type=\"submit\" onClick={() => handleSaveClick()}>GUARDAR</Button>\r\n                                            &nbsp;\r\n                                            <Button className=\"btn btn-primary\" type=\"reset\" >LIMPIAR</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </Fragment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VSinformacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\dashboard\\ubicacionvs.tsx",["834","835"],[],"import Link from 'next/link';\r\nimport DefaultDashboardLayout from '../../layouts/DefaultDashboardLayout'\r\nimport { FormSelect, DropFiles } from \"widgets\";\r\nimport { Col, Row, Form, Card, Button, Image, Table, Modal, Accordion } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport VSinformacion from './ubicacionvs/infoubicacion';\r\nimport VScrudubicacion from './ubicacionvs/crudubicacion';\r\n\r\nconst ubicacion = () => {\r\n    const [seccionActiva, setSeccionActiva] = useState('home');\r\n\r\n    const ocultarMantenimiento = (seccion) => {\r\n        setSeccionActiva(seccion);\r\n    };\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        texto: '',\r\n        categoria: '',\r\n        imagen: '',\r\n        href: '',\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <DefaultDashboardLayout>\r\n                <Row className=\"align-items-center\">\r\n                    <Col xl={12} lg={12} md={12} xs={12}>\r\n                        <div className=\"bg-white rounded-bottom smooth-shadow-sm \">\r\n                            <div className=\"d-flex align-items-center justify-content-between pt-4 pb-2 px-4\">\r\n                                <div className=\"d-flex align-items-center\">\r\n\r\n                                    <div className=\"lh-1\">\r\n                                        <h3 className=\"mb-2 text-secondary\">VILLA SIPAN: PÁGINA UBICACIÓN</h3>\r\n                                        <p>En el siguiente formulario podrás visualizar tus cambios del slider como también editar sus datos.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"nav nav-lt-tab px-4\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'home' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('home')}\r\n                                    >\r\n                                        DESCRIPCION\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link\r\n                                        className={`nav-link ${seccionActiva === 'paginas' ? 'active' : ''}`}\r\n                                        href=\"#\"\r\n                                        onClick={() => ocultarMantenimiento('paginas')}\r\n                                    >\r\n                                        SERVICIOS\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" href=\"#\">\r\n                                        Otros\r\n                                    </Link>\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-8 m-1\">\r\n                    {seccionActiva === 'home' && <VSinformacion />}\r\n                    {seccionActiva === 'paginas' && <VScrudubicacion />}\r\n                </Row>\r\n            </DefaultDashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ubicacion","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\empresa.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\garzablanca.tsx",["836"],[],"import { useEffect, useState } from 'react'\r\nimport CFooter from './components/estructura/footer'\r\nimport CFormulario from './components/estructura/formulario'\r\nimport CTop from './components/estructura/top'\r\nimport CAnuncio from './components/estructura/anuncio'\r\nimport CAdorno from './components/estructura/adorno'\r\nimport type { Metadata } from 'next'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport { Border } from 'react-bootstrap-icons'\r\nimport Videosinfo from './components/estructura/videosinfo'\r\nexport const metadata: Metadata = {\r\n  title: 'Compratulote.pe : Plantilla',\r\n  description: 'Plantilla inicicial',\r\n}\r\nexport default function GarzaBlanca() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n    fetch('http://localhost:3001/serviciosES')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n        setDatos(filtrado);\r\n        setBanners(rptAPI);\r\n      })\r\n      .catch(error => console.error(\"Se encontró un error\"))\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className='bg-white m-0'>\r\n       <Card className='p-0'>\r\n              <CTop selMenu=\"index\" pagenav=\"./\" />\r\n              <CAdorno />\r\n              <div className='m-0'>\r\n                <div className=\"container\" >\r\n                  <div className=\"row g-5 mb-3 py-4\">\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n                      <CAnuncio />\r\n                      <div className=\"container text-center\">\r\n                        <div className=\"row row-cols-2 row-cols-lg-5 g-2 g-lg-3\">\r\n                          {datos.map((fila, index) => (\r\n                            <div className=\"col\" key={index}>\r\n                              <div className=\"p-3 rounded-4 custom-border-info\" style={{border:'2px solid #637391'}}>\r\n                                <img src={fila.imagen} alt='imagen' className=\"img-fluid custom-img-info\" />\r\n                              </div>\r\n                              <p className=\"py-2 fw-bold\" style={{color:'#637391'}}>{fila.titulo}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <CFormulario />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Videosinfo />\r\n              <CFooter rutatmp='./../../' />\r\n           </Card>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\index.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\informacion.tsx",["837"],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\layout.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\noticias.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\profile.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\settings.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\test.tsx",["838","839","840","841","842","843","844"],[],"// import node module libraries\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport React from 'react';\r\n// import widget as custom components\r\nimport Link from 'next/link';\r\n\r\n// import sub components\r\n\r\n// import data files\r\n\r\n\r\nconst Test = () => {\r\n    return (\r\n        <>\r\n            <div className=\"row bg-white\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"x_panel\">\r\n                        <div className=\"x_title\">\r\n                            <ul className=\"nav nav-pills nav-justified bg-danger\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-light fs-5\" aria-current=\"page\" href=\"#\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\"\r\n                                            className=\"bi bi-envelope\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z\" />\r\n                                        </svg> info@compratulote.com</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\"></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\"></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link disabled\" aria-disabled=\"true\">\r\n                                        <span className=\"rounded-circle bg-white pb-1 text-center\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                                fill=\"currentColor\" className=\"bi bi-facebook\" viewBox=\"0 0 15 16\">\r\n                                                <path\r\n                                                    d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        &nbsp;\r\n                                        <span className=\"rounded-circle bg-dark pb-2 px-1 text-center\">\r\n\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" className=\"bi bi-instagram text-light\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        &nbsp;\r\n                                        <span className=\"rounded-circle bg-dark pb-2 px-1 text-center\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" className=\"bi bi-whatsapp text-light\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\r\n                                            </svg></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <ul className=\"nav justify-content-center bg-white\">\r\n                                <li className=\"nav-item\">\r\n                                    <img src=\"Imagenes/Img01.pg\" alt=\"Logo\" />\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active btn btn-danger mx-2 rounded-5\" aria-current=\"page\"\r\n                                        href=\"/Index.html\">Información</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-black\" href=\"/Ubicacion.html\"><strong>Ubicación</strong></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-black\" href=\"/Plano.html\"><strong>Plano</strong></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-black\" href=\"/TimeLine.html\"\r\n                                        aria-disabled=\"true\"><strong>TimeLine</strong></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link text-black\" href=\"/Empresa.html\" aria-disabled=\"true\"><strong>La\r\n                                        Empresa</strong></a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <img src=\"Imagenes/Img2.png\" alt=\"Logo\" />\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"x_content\">\r\n                        <div className=\"container-fluid p-0 contenedor-imagen\">\r\n                            <img src=\"https://images.unsplash.com/photo-1628744448840-55bdb2497bd4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1740&q=80\" className=\"fondo\" alt=\"Imagen de fondo\" />\r\n                            <div className=\"position-absolute w-100 texto-superpuesto\">\r\n                                <h1 className=\"text-white fw-bold\">Lorem Ipsum dolor sit amet</h1>\r\n                                <p className=\"text-white\">Lorem ipsum dolor sit amet, consectetuer adipis-cing elit, sed diam\r\n                                    nonummy nib</p>\r\n                            </div>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\"\r\n                                className=\"bi bi-play-circle-fill icono-reproducir\" viewBox=\"0 0 16 16\">\r\n                                <path\r\n                                    d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"x_content\">\r\n                        <div className=\"container\">\r\n                            <div className=\"button-bar\">\r\n                                <div className=\"row mb-3 text-center fw-bold \">\r\n                                    <div className=\"col-md-4 col-sm-4 bg-red text-light h4 py-5 rounded-start-5 \">Información de\r\n                                        Oferta\r\n                                    </div>\r\n                                    <div className=\"col-md-4 col-sm-4 bg-danger text-light h4 py-5\">Información de Oferta</div>\r\n                                    <div className=\"col-md-4 col-sm-4 bg-red text-light h4 py-5 rounded-end-5 \">Información de\r\n                                        Sala\r\n                                        de Venta</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n\r\n                            <div className=\"row g-5 py-4 p-2\">\r\n                                <div className=\"col-md-7 col-lg-8\">\r\n                                    <p className=\"txt-jf\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam\r\n                                        nonummy nibh euis-mod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut\r\n                                        wisi enim ad\r\n                                        minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut\r\n                                        aliquip\r\n                                        ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate\r\n                                        velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero\r\n                                        eros et accum- san et iusto odio dignissim qui blandit praesent luptatum zzril\r\n                                        delenit augue\r\n                                        duis dolore te feugait nulla facilisi. <br />\r\n\r\n                                        Lorem ipsum dolor sit amet, cons ectetuer adipiscing elit, sed diam nonummy nibh\r\n                                        eu-ismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad\r\n                                        minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut\r\n                                        aliquip\r\n                                        ex ea commodo consequat.</p>\r\n\r\n                                    <div className=\"container mt-4 gx-5 \">\r\n                                        <div className=\"row \">\r\n\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-droplet\" viewBox=\"0 0 16 16\">\r\n                                                            <path fill-rule=\"evenodd\"\r\n                                                                d=\"M7.21.8C7.69.295 8 0 8 0c.109.363.234.708.371 1.038.812 1.946 2.073 3.35 3.197 4.6C12.878 7.096 14 8.345 14 10a6 6 0 0 1-12 0C2 6.668 5.58 2.517 7.21.8zm.413 1.021A31.25 31.25 0 0 0 5.794 3.99c-.726.95-1.436 2.008-1.96 3.07C3.304 8.133 3 9.138 3 10a5 5 0 0 0 10 0c0-1.201-.796-2.157-2.181-3.7l-.03-.032C9.75 5.11 8.5 3.72 7.623 1.82z\" />\r\n                                                            <path fill-rule=\"evenodd\"\r\n                                                                d=\"M4.553 7.776c.82-1.641 1.717-2.753 2.093-3.13l.708.708c-.29.29-1.128 1.311-1.907 2.87l-.894-.448z\" />\r\n                                                        </svg>\r\n                                                    </button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Agua</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Luz</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <img src=\"Imagenes/Recurso1.png\" />\r\n                                                    </button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Desague</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Club</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-md-3 col-sm-3 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Cerco Perimétrico</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-droplet\" viewBox=\"0 0 16 16\">\r\n                                                            <path fill-rule=\"evenodd\"\r\n                                                                d=\"M7.21.8C7.69.295 8 0 8 0c.109.363.234.708.371 1.038.812 1.946 2.073 3.35 3.197 4.6C12.878 7.096 14 8.345 14 10a6 6 0 0 1-12 0C2 6.668 5.58 2.517 7.21.8zm.413 1.021A31.25 31.25 0 0 0 5.794 3.99c-.726.95-1.436 2.008-1.96 3.07C3.304 8.133 3 9.138 3 10a5 5 0 0 0 10 0c0-1.201-.796-2.157-2.181-3.7l-.03-.032C9.75 5.11 8.5 3.72 7.623 1.82z\" />\r\n                                                            <path fill-rule=\"evenodd\"\r\n                                                                d=\"M4.553 7.776c.82-1.641 1.717-2.753 2.093-3.13l.708.708c-.29.29-1.128 1.311-1.907 2.87l-.894-.448z\" />\r\n                                                        </svg>\r\n                                                    </button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Agua</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Luz</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Desague</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2 col-sm-2 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Club</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-md-3 col-sm-3 mb-4\">\r\n                                                <div className=\"album-item text-center\">\r\n                                                    <button type=\"button\"\r\n                                                        className=\"btn border border-danger border-2 p-3 rounded-4 \">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\"\r\n                                                            fill=\"currentColor\" className=\"bi bi-sun text-secondary-emphasis\"\r\n                                                            viewBox=\"0 0 16 16\">\r\n                                                            <path\r\n                                                                d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                                                        </svg></button><br />\r\n                                                    <label className=\"text-danger fw-bold\">Cerco Perimétrico</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5 col-lg-4 \">\r\n                                    <div className=\"no-left-top-shadow rounded-3\">\r\n                                        <div className=\"bg-red border rounded-top-4 p-3\">\r\n                                            <h4 className=\"text-light fw-bold text-center\">Quiero que\r\n                                                me contacten</h4>\r\n                                        </div>\r\n                                        <form className=\"needs-validation border mb-5 p-4 rounded-bottom-1\">\r\n                                            <div className=\"row g-3\">\r\n                                                <div className=\"col-12\">\r\n                                                    <label className=\"form-label\">Nombres:</label>\r\n                                                    <div className=\"input-group has-validation\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-0\" id=\"nombres\"\r\n                                                            placeholder=\"Ingresa tu nombre\" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12\">\r\n                                                    <label className=\"form-label\">Apellidos:</label>\r\n                                                    <div className=\"input-group has-validation\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-0\" id=\"apellidos\"\r\n                                                            placeholder=\"Ingresa tus apellidos\" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12\">\r\n                                                    <label className=\"form-label\">DNI:</label>\r\n                                                    <div className=\"input-group has-validation\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-0\" id=\"dni\"\r\n                                                            placeholder=\"N° DE DNI\" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12\">\r\n                                                    <label className=\"form-label\">CELULAR:</label>\r\n                                                    <div className=\"input-group has-validation\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-0\" id=\"celular\"\r\n                                                            placeholder=\"N° de Celular\" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-12\">\r\n                                                    <label className=\"form-label\">CORREO:</label>\r\n                                                    <div className=\"input-group has-validation\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-0\" id=\"celular\"\r\n                                                            placeholder=\"Correo Electrónico\" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr style={{ color:'white'}}/>\r\n                                            </div>\r\n\r\n                                            <button className=\"w-100 btn btn-dark btn-lg fw-bold rounded-0\"\r\n                                                type=\"submit\">ENVIAR</button>\r\n                                            <br />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row p-2\">\r\n                                <div className=\"col-md-7 col-lg-7\">\r\n                                    <div id=\"carouselExampleSlidesOnly\" className=\"carousel slide border border-danger border-2 p-2 h-100\" data-bs-ride=\"carousel\">\r\n                                        <div className=\"carousel-inner object-fit-cover\">\r\n                                            <div className=\"carousel-item active\">\r\n                                                <img src=\"Imagenes/Img3.png\" className=\"w-100\" alt=\"...\" />\r\n                                            </div>\r\n                                            <div className=\"carousel-item\">\r\n                                                <img src=\"Imagenes/Img2.png\" className=\"w-100\" alt=\"...\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5 col-lg-5\">\r\n                                    <div className=\"border border-danger border-2 p-2 position-relative h-100\">\r\n                                        <video src=\"Imagenes/video1.m4\" className=\"w-100\" autoplay id=\"play\"></video>\r\n                                        <span id=\"pauseButton\" className=\"position-absolute top-50 start-50 translate-middle\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\" className=\"bi bi-play-circle-fill text-light\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br /> <br />\r\n                        </div>\r\n                    </div>\r\n                    <footer className=\"bg-dark text-light text-center py-3\">\r\n                        <div className=\"container\">\r\n                            <p>Copyright &copy; 2023 Los Arrecifes de Mórrope | Desarrollado por Compratulote.pe</p>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\pages\\test2.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\plano.tsx",["845","846"],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\proyectos.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\servicios.tsx",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864"],[],"import styles from './page.module.css'\r\nimport type { Metadata } from 'next'\r\n//import COMPFooter from './components/footer/footer2'\r\nimport COMProductoBuscar from './components/proyectos/buscador'\r\nimport COMTopInterno from './components/top/topInterno'\r\nimport CBreadcrumb from './components/informacion/pagebardump'\r\nimport CFormcontactanos from './components/informacion/contactanos'\r\nexport const metadata: Metadata = {\r\n    title: 'Compratulote.pe : Servicios',\r\n    description: 'Pagina incial de compra tu lote',\r\n    icons: {\r\n        icon: '../images/compratulote.ico', // /public path\r\n    },\r\n}\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <COMTopInterno menu=\"servicios\" />\r\n            <COMProductoBuscar />\r\n            <CBreadcrumb page=\"servicios\" />\r\n            <div className='paginaservicios'>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            ¡Descubre el futuro de los negocios inmobiliarios con CompraTuLote! Transforma tu experiencia en el mercado con nuestras soluciones tecnológicas de vanguardia. Desde herramientas de gestión de propiedades hasta plataformas de análisis de datos, CompraTuLote impulsa tu empresa hacia el éxito. Optimiza procesos, aumenta la eficiencia y potencia tus ventas. ¡CompraTuLote, la clave para llevar tu negocio inmobiliario al siguiente nivel!\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"row pasos\">\r\n                                <span className='number'>1</span>\r\n                                <div className=\"col-md-9 text-start tituloComponentes \">\r\n                                    Utiliza Nuestra <strong>estructura Web</strong>\r\n                                </div>\r\n                                <div className=\"col-md-3 text-end tituloComponentes\">\r\n                                    <i className=\"bi bi-file-earmark-richtext\"></i>\r\n                                    <a className=\"btn btn-red btn-danger\" download=\"Brochure compratulote.pdf\" href='./documentos/brochure.pdf' target='_blank'><i className=\"bi bi-cloud-download-fill\"></i> Brochure</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"col-md-12 \">\r\n                            Potencia tu presencia inmobiliaria con la estructura web de CompraTuLote, una plataforma que te permite destacar tus propiedades de manera impactante. Desde fotografías de alta calidad hasta descripciones cautivadoras, nuestra herramienta intuitiva te ayuda a informar de manera efectiva sobre tus desarrollos. Mantén a tus clientes actualizados con nuestras funciones de noticias y eventos, diferenciándote en el competitivo mercado. Únete a CompraTuLote y lleva la presentación de tus propiedades al siguiente nivel, informa, impresiona y destaca.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className='row'>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura1.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura2.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura3.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura4.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura5.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura6.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura7.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura8.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img src=\"./images/servicios/estructura/estructura9.png\" className=\"img-fluid\" alt=\"imagen servicio\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-4 contenedorasesora\">\r\n\r\n                            <img src=\"./images/servicios/estructura/asesora.png\"\r\n                                className=\"img-fluid imgasesora\" alt=\"imagen servicio\" />\r\n                            <div className='fondoasesora'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className='container paginaservicios'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row pasos\">\r\n                            <span className='number'>2</span>\r\n                            <div className=\"col-md-9 text-start tituloComponentes \">\r\n                                <strong>Anuncie</strong> en nuestro portal\r\n                            </div>\r\n                            <div className=\"col-md-3 text-end tituloComponentes\">\r\n                                <i className=\"bi bi-file-earmark-richtext\"></i>\r\n                                <a className=\"btn btn-red btn-danger\" download=\"Flyer-compratulote.jpg\" href='./documentos/flyerinfo.jpg' target='_blank'><i className=\"bi bi-cloud-download-fill\"></i> Flyer Info</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className=\"col-md-5 col-sm-6 col-xs-12\">\r\n                        <div >\r\n                            Promocione productos o servicios en nuestro portal para alcanzar a una amplia audiencia y aumentar su visibilidad en línea. </div>\r\n                        <img className='img-fluid' src=\"/images/servicios/anuncie/imagen.png\" />\r\n                    </div>\r\n                    <div className=\"col-md-7 col-sm-6 col-xs-12 listabeneficiosredes\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\"><img src=\"/images/servicios/anuncie/1.png\" alt=\"\" /></div>\r\n                            <div className=\"col-md-6\"><img src=\"/images/servicios/anuncie/2.png\" alt=\"\" /></div>\r\n                            <div className=\"col-md-6\"><img src=\"/images/servicios/anuncie/3.png\" alt=\"\" /></div>\r\n                            <div className=\"col-md-6\"><img src=\"/images/servicios/anuncie/4.png\" alt=\"\" /></div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row pasos\">\r\n                            <span className='number'>3</span>\r\n                            <div className=\"col-md-9 text-start tituloComponentes \">\r\n                                Gestión de <strong>Redes Sociales</strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className=\"col-md-8 col-sm-6 col-xs-12 listabeneficiosredes\">\r\n                        <div >\r\n                            Gestionamos el contenido de tus principales redes sociales (Facebook e Instagram), implementando una parrilla de publicaciones acorde con las necesidades de comunicación.\r\n                        </div>\r\n                        <ul>\r\n                            <li><div><i className='bi bi-check-circle'></i> Creamos tu perfil corporativo</div></li>\r\n                            <li><div><i className='bi bi-check-circle'></i> Parrilla de publicaciones</div></li>\r\n                            <li><div><i className='bi bi-check-circle'></i> Gestion de Mensajes y comentarios</div></li>\r\n                            <li><div><i className='bi bi-check-circle'></i> 12 Post Mensuales</div></li>\r\n                            <li><div><i className='bi bi-check-circle'></i> Medición de Resultados</div></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n                        <img className='img-fluid' src=\"/images/servicios/redes.png\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <CFormcontactanos />\r\n            \r\n        </>\r\n    )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\timeline.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\ubicacion.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\adorno.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\anuncio.tsx",["865","866"],[],"import { useEffect, useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nexport default function VSanuncio() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n    fetch('http://localhost:3001/pginformacionvs')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n        setDatos(filtrado);\r\n        setBanners(rptAPI);\r\n      })\r\n      .catch(error => console.error('Tenemos un error', error));\r\n  }, []);\r\n  return (\r\n    <>\r\n\r\n      {datos.map((fila, index) => (\r\n        <div key={index}>\r\n          {fila.categoria === 'empresa' ? (\r\n            <>\r\n              <p className=\"txt-jf\" dangerouslySetInnerHTML={{ __html: fila.content }} /> \r\n              <Row className=\"mb-1\">\r\n                <div className=\"col-md-6 col-6\">\r\n                  <img src={fila.recurso1} className='img-thumbnail rounded-4' alt='Text' />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 col-6\">\r\n                  <img src={fila.recurso2} className='img-thumbnail rounded-4' alt='Text2' />\r\n                </div>\r\n              </Row>\r\n            </>\r\n          ) : (\r\n            <Row className=\"mb-1\"> \r\n            <p className=\"txt-jf\" dangerouslySetInnerHTML={{ __html: fila.content }} />\r\n           \r\n          </Row>\r\n          )}\r\n\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\banner.tsx",["867"],[],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Modal, Row } from \"react-bootstrap\";\r\n\r\nexport default function CBanner() {\r\n    const [showText, setShowText] = useState(true);\r\n    const [datos, setDatos] = useState([]);\r\n    const [setBanner, setBanners] = useState('');\r\n    const [lgShow, setLgShow] = useState(false);\r\n    useEffect(() => {\r\n        const identificador = window.location.pathname.split('/');\r\n        const categoriaApi = identificador[identificador.length - 1];\r\n\r\n        fetch('http://localhost:3001/pgbannervs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const imagenesFiltradas = data.filter(fila => fila.categoria === categoriaApi);\r\n                setDatos(imagenesFiltradas);\r\n                setBanners(categoriaApi);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n\r\n        const interval = setInterval(() => {\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {datos.map((fila, index) => (\r\n                <div className=\"container-fluid contenedor-imagen p-0\" key={index}>\r\n                    <div className=\"position-relative\">\r\n                        <img src={fila.imagen} className=\"fondo\" alt={fila.categoria} />\r\n                        <div className=\"position-absolute w-100 texto-superpuesto\">\r\n                            <div className=\"transicion-container bg-custom-colordk\">\r\n                                <h2 className={'text-white transicion-container titulo-Intro'}>{fila.titulo}</h2>\r\n                                <p className={'text-white text-transicion'}>{fila.subtitulo}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" fill=\"currentColor\"\r\n                        className=\"bi bi-play-circle-fill icono-reproducir\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" viewBox=\"0 0 16 16\" onClick={() => setLgShow(true)}>\r\n                        <path\r\n                            d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                    </svg>\r\n                    <Fragment>\r\n                        <Modal size=\"xl\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" style={{ backgroundColor: 'black' }}>\r\n                            <Modal.Header closeButton style={{ backgroundColor: 'lightgray' }}>\r\n\r\n                            </Modal.Header>\r\n                            <Modal.Body style={{ backgroundColor: 'lightgray', height: '80vh' }}>\r\n\r\n                                <iframe className=\"w-100 h-100\" src={fila.href} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\r\n\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </Fragment>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\formulario.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\navbar.tsx",["868"],[],"import { useEffect, useState } from \"react\";\r\n\r\nexport default function CNavbar({ pagenav = \"\" }) {\r\n    const [datos, setDatos] = useState([]);\r\n    const [selMenu, setSelMenu] = useState('');\r\n    useEffect(() => {\r\n        const urlParts = window.location.pathname.split('/');\r\n        const categoriaFromUrl = urlParts[urlParts.length - 1];\r\n\r\n        fetch('http://localhost:3001/pgmenuvs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setDatos(data);\r\n                setSelMenu(categoriaFromUrl);\r\n            })\r\n            .catch(error => console.error('Error al obtener datos:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"nav flex-column flex-sm-row justify-content-center bg-white p-2 overflow-auto\" style={{borderTop:'4px solid #2e7e46'}}>\r\n                <div className=\"d-flex flex-nowrap align-items-center justify-content-center justify-content-lg-start\">\r\n                    {datos.map((fila, index) => (\r\n                        <li key={index} className=\"nav-item fw-bold\">\r\n                            {fila.texto === 'Logo' ? (\r\n                                <img src={fila.href} alt=\"Logo\" style={{ zoom: '0.4'}} className=\"mx-2 \" />\r\n                            ) : (\r\n                                <a className={`nav-link custom-sombra2 fs-4 ${selMenu.toLowerCase() === fila.texto.toLowerCase() ? 'text-light active bgProyect2 mx-2 rounded-5' : 'text-dark'}`} href={fila.href ? `../villasipan${fila.href}` : undefined}>\r\n                                    {fila.texto}\r\n                                </a>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </div>\r\n            </ul>\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\plano.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\top.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\ubicacion.tsx",["869"],[],"import { useEffect, useState } from \"react\"\r\n\r\nexport default function CUbicacion() {\r\n    const [datos, setDatos] = useState([]);\r\n    const [ubicacion, setUbicacion] = useState('');\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        categoria: '',\r\n        titulo: '',\r\n        texto: '',\r\n        estado: '',\r\n        imagen: ''\r\n    });\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const url = verificador[verificador.length - 1];\r\n        fetch('http://localhost:3001/serviciosES')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === url);\r\n                setDatos(filtrado);\r\n                setUbicacion(url);\r\n            })\r\n            .catch(error => console.error('Tenemos un error:', error));\r\n    }, []);\r\n\r\n    const handleEnviarIdClick = (id) => {\r\n        setEditItemId(id);\r\n        fetch(`http://localhost:3001/serviciosES/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    categoria: data.categoria,\r\n                    titulo: data.titulo,\r\n                    texto: data.texto,\r\n                    estado: data.estado,\r\n                    imagen: data.imagen\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-7 col-lg-8\">\r\n                    <div className=\"container px-4 text-center\">\r\n                        <div className=\"row gx-5\">\r\n                            <div className=\"accordion\" id=\"accordionExample\">\r\n                                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\"\r\n                                    data-bs-parent=\"#accordionExample\">\r\n                                    \r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6 pe-0\">\r\n                                                <h1 className=\"fw-bold cProyect2\">{formData.titulo}</h1>\r\n                                            </div>\r\n                                            <div className=\"col-md-6 ps-1\">\r\n                                                <p>{formData.texto}</p>\r\n                                            </div>\r\n                                            <div className=\"col-md-12 object-fit-cover border borderProyect border-3 p-1\">\r\n                                                <video autoPlay src=\"./../../recursosestructura/imagenes/video1.mp4\" className=\"w-100\" ></video>\r\n                                            </div>\r\n                                        </div>\r\n                                \r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 col-lg-4 p-4\"><br />\r\n                    <div className=\"no-left-top-shadow rounded-3 \">\r\n                        <div className=\"accordion \" id=\"accordionExample\">\r\n                            <div className=\"accordion-item border border-top-1 border-bottom-0 p-1\"><br />\r\n                                {datos.map((fila, index) => (\r\n                                    <h4 className=\"accordion-header\">\r\n                                        <button\r\n                                            className=\"accordion-button-no-icon collapsed rounded-5 bg-body border-0 focus-ring focus-ring-light px-4\"\r\n                                            type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\r\n                                            aria-expanded=\"true\" aria-controls=\"collapseOne\" onClick={() => handleEnviarIdClick(fila.id)}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                                fill=\"currentColor\" className=\"bi bi-folder-fill crema\"\r\n                                                viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z\" />\r\n                                            </svg>\r\n                                            <span className=\"px-3 text\" >{fila.estado}</span>\r\n                                        </button>\r\n                                    </h4>))}\r\n                                <br />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\componentes\\videosinfo.tsx",["870"],[],"import { Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nexport default function Videosinfo() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n    };\r\n    const sliderRef = React.useRef(null);\r\n    const [datos, setDatos] = useState([]);\r\n    const [banners, setBanners] = useState('');\r\n    const nextSlide = () => {\r\n        sliderRef.current.slickNext();\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        sliderRef.current.slickPrev();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const verificador = window.location.pathname.split('/');\r\n        const rptAPI = verificador[verificador.length - 1];\r\n        fetch('http://localhost:3001/pginformacionvs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n                setDatos(filtrado);\r\n                setBanners(rptAPI);\r\n            })\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n    return (\r\n        <>\r\n            {datos.map((item, index) => (<Row className='m-0 p-5' key={index}>\r\n                <div className=\"col-md-7 col-lg-7 mb-1\">\r\n                    <div className='carousel slide p-2 h-100 w-100' style={{border:'2px solid #b08833'}}>\r\n                    <Slider ref={sliderRef} {...settings}>\r\n                            {item.recurso1 && item.recurso1.split(',').map((path, i) => (\r\n                                <div key={i}>\r\n                                    <img src={path.trim()} alt={item.texto} className=\"w-100 h-100\" />\r\n                                </div>\r\n                            ))}\r\n                        </Slider>\r\n                        <div>\r\n                            <button className=\"carousel-control-prev\" onClick={prevSlide}>\r\n                                <span className=\"carousel-control-prev-icon bgProyect2\" aria-hidden=\"true\"></span>\r\n                                <span className=\"visually-hidden\">Previous</span>\r\n                            </button>\r\n                            <button className=\"carousel-control-next\" onClick={nextSlide}>\r\n                                <span className=\"carousel-control-next-icon bgProyect2\" aria-hidden=\"true\"></span>\r\n                                <span className=\"visually-hidden\">Next</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 col-lg-5 mb-1\">\r\n                    <div className=\"p-2 position-relative h-100\" style={{ height: '100%', width: '100%', border:'2px solid #b08833'}}>\r\n                        <iframe src={item.recurso2}  className=\"w-100 h-100\" style={{ border: 'none', borderRadius: 'inherit' }} allowFullScreen></iframe>\r\n                    </div>\r\n                </div>\r\n            </Row>))}\r\n        </>\r\n    )\r\n}","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\empresa.tsx",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\informacion.tsx",["871"],[],"import { useEffect, useState } from 'react'\r\nimport CFormulario from './componentes/formulario'\r\nimport CTop from './componentes/top'\r\nimport CAdorno from './componentes/adorno'\r\nimport VSanuncio from './componentes/anuncio'\r\nimport CFooter from '../components/estructura/footer'\r\nimport type { Metadata } from 'next'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport Videosinfo from './componentes/videosinfo'\r\nexport const metadata: Metadata = {\r\n  title: 'Compratulote.pe : Plantilla',\r\n  description: 'Plantilla inicicial',\r\n}\r\nexport default function EstructuraInicio() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n    fetch('http://localhost:3001/serviciosES')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n        setDatos(filtrado);\r\n        setBanners(rptAPI);\r\n      })\r\n      .catch(error => console.error(\"Se encontró un error\"))\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className='bg-white m-0'>\r\n        <Card className='p-0'>\r\n          <CTop selMenu=\"index\" pagenav=\"./\" />\r\n          <CAdorno />\r\n          <div className='m-0'>\r\n            <div className=\"container\" >\r\n              <div className=\"row g-5 mb-3 py-4\">\r\n                <div className=\"col-md-7 col-lg-8\">\r\n                  <VSanuncio/>\r\n                  <div className=\"container text-center\">\r\n                    <div className=\"row row-cols-2 row-cols-lg-5 g-2 g-lg-3\">\r\n                      {datos.map((fila, index) => (\r\n                        <div className=\"col\" key={index}>\r\n                          <div className=\"p-3 rounded-4 custom-border-info\" style={{ border: '2px solid #fdcd68' }}>\r\n                            <img src={fila.imagen} alt='imagen' className=\"img-fluid custom-img-info\" />\r\n                          </div>\r\n                          <p className=\"py-2 fw-bold\" style={{ color: '#d8b66f' }}>{fila.titulo}</p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <CFormulario />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Videosinfo />\r\n          <CFooter rutatmp='./../../' />\r\n        </Card>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\plano.tsx",["872","873"],[],"'use Cliente'\r\nimport CFooter from '../components/estructura/footer'\r\nimport CTop from './componentes/top'\r\nimport CAdorno from './componentes/adorno'\r\nimport { Card, Modal, Row } from 'react-bootstrap'\r\nimport CPlano from './componentes/plano'\r\nimport { Fragment, useState } from 'react'\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nexport default function EstructuraInicio() {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [editItemId, setEditItemId] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        lote: '',\r\n        manzana: '',\r\n        areaLote: '',\r\n        referencia: '',\r\n        precio: '',\r\n        estado: '',\r\n        coordenadas: '',\r\n        color: ''\r\n      \r\n    });\r\n    const [areas, setAreas] = useState([]);\r\n    const [loadedImage, setLoadedImage] = useState(null);\r\n    const canvasRef = useRef(null);\r\n    const [selectedArea, setSelectedArea] = useState(null);\r\n    const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n\r\n    const drawAllAreas = (ctx) => {\r\n        areas.forEach(area => {\r\n            const coords = area.coordenadas.split(',').map(Number);\r\n            ctx.beginPath();\r\n            for (let i = 0; i < coords.length; i += 2) {\r\n                const x = coords[i];\r\n                const y = coords[i + 1];\r\n                if (i === 0) {\r\n                    ctx.moveTo(x, y);\r\n                } else {\r\n                    ctx.lineTo(x, y);\r\n                }\r\n            }\r\n            ctx.closePath();\r\n            ctx.fillStyle = area.color;\r\n            ctx.fill();\r\n        });\r\n    };\r\n\r\n    const drawHighlight = (ctx) => {\r\n        if (selectedArea) {\r\n            const coords = selectedArea.coordenadas.split(',').map(Number);\r\n            ctx.beginPath();\r\n            for (let i = 0; i < coords.length; i += 2) {\r\n                const x = coords[i];\r\n                const y = coords[i + 1];\r\n                if (i === 0) {\r\n                    ctx.moveTo(x, y);\r\n                } else {\r\n                    ctx.lineTo(x, y);\r\n                }\r\n            }\r\n            ctx.closePath();\r\n            ctx.fillStyle = selectedArea.color;\r\n            ctx.fill();\r\n        }\r\n    };\r\n    const isCursorInArea = (cursorX, cursorY, area) => {\r\n        const coords = area.coordenadas.split(',').map(Number);\r\n        let isInside = false;\r\n        for (let i = 0, j = coords.length - 2; i < coords.length; i += 2) {\r\n            const xi = coords[i], yi = coords[i + 1];\r\n            const xj = coords[j], yj = coords[j + 1];\r\n            const intersect = ((yi > cursorY) !== (yj > cursorY)) && (cursorX < (xj - xi) * (cursorY - yi) / (yj - yi) + xi);\r\n            if (intersect) isInside = !isInside;\r\n            j = i;\r\n        }\r\n        return isInside;\r\n    };\r\n    useEffect(() => {\r\n        if (loadedImage) {\r\n            const ctx = canvasRef.current.getContext('2d');\r\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            ctx.drawImage(loadedImage, 0, 0);\r\n            drawAllAreas(ctx);\r\n            drawHighlight(ctx);\r\n        }\r\n    }, [selectedArea, loadedImage]);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        const image = new Image();\r\n        image.onload = () => {\r\n            setImageSize({ width: image.naturalWidth, height: image.naturalHeight });\r\n            canvas.width = image.naturalWidth;\r\n            canvas.height = image.naturalHeight;\r\n            ctx.drawImage(image, 0, 0);\r\n            drawAllAreas(ctx);\r\n            setLoadedImage(image);\r\n        };\r\n        image.src = '/images/icons/PLANOVILLASIPAN.png';\r\n\r\n        const handleClick = (event) => {\r\n            const rect = canvas.getBoundingClientRect();\r\n            const scaleX = canvas.width / rect.width;\r\n            const scaleY = canvas.height / rect.height;\r\n            const x = (event.clientX - rect.left) * scaleX;\r\n            const y = (event.clientY - rect.top) * scaleY;\r\n            areas.forEach(area => {\r\n                if (isCursorInArea(x, y, area)) {\r\n                    handleEditClick(area.id);\r\n                }\r\n            });\r\n        };\r\n\r\n        canvas.addEventListener('click', handleClick);\r\n        return () => {\r\n            canvas.removeEventListener('click', handleClick);\r\n        };\r\n    }, [areas]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/pgconfiplanovs')\r\n            .then(response => response.json())\r\n            .then(data => setAreas(data))\r\n            .catch(error => console.error('Tenemos un error', error));\r\n    }, []);\r\n\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditItemId(id);\r\n        setLgShow(true);\r\n\r\n        fetch(`http://localhost:3001/pgplano/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setFormData({\r\n                    id: data.id,\r\n                    lote: data.lote,\r\n                    manzana: data.manzana,\r\n                    areaLote: data.areaLote,\r\n                    dimension1: data.dimension1,\r\n                    dimension2: data.dimension2,\r\n                    referencia: data.referencia,\r\n                    precioBase: data.precioBase,\r\n                    descuento: data.descuento,\r\n                    inicial: data.inicial,\r\n                    interesAnual: data.interesAnual,\r\n                    cuota12: data.cuota12,\r\n                    cuota18: data.cuota18,\r\n                    cuota24: data.cuota24,\r\n                    cuota36: data.cuota36\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al obtener datos para editar:', error);\r\n            });\r\n\r\n        /*\r\n        <img src=\"/images/icons/PLANOGARZABLANCA.png\" useMap=\"#image-map\" />\r\n        */\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className='bg-white m-0'>\r\n                <CTop selMenu=\"plano\" pagenav=\"./../\" />\r\n                <div className=\"x_content\" >\r\n                    <CAdorno />\r\n                    <div className=\"container\">\r\n                        <div className=\"row g-5\">\r\n                            <div className=\"col-md-12 col-lg-12 border border-3 rounded-3\">\r\n                            <div className=\"imageContainer\">\r\n                                    <canvas ref={canvasRef} width={imageSize.width} height={imageSize.height} className=\"image\"></canvas>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"container\">\r\n                                <div className=\"row py-3\">\r\n                                    <div className='col-md-2'></div>\r\n                                    <div className='col-md-1'></div>\r\n                                    <div className='row col-md-9'>\r\n                                        <div className=\"col-md-3 text-center py-2\">\r\n                                            <span className=''>\r\n                                                <span className=\"rounded-circle p-2 bg-danger border border-secondary\">\r\n                                                    <span className=\"p-2 \" />\r\n                                                </span>\r\n                                                <span className=\"p-2\">LOTES VENDIDOS</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3 text-center py-2\">\r\n                                            <span className=''>\r\n                                                <span className=\"rounded-circle p-2 border border-secondary\">\r\n                                                    <span className=\"p-2 \" />\r\n                                                </span>\r\n                                                <span className=\"p-2\">LOTES DISPONIBLES</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col-md-3 text-center py-2\">\r\n                                            <span className=''>\r\n                                                <span className=\"rounded-circle p-2 bg-success border border-secondary\">\r\n                                                    <span className=\"p-2 \" />\r\n                                                </span>\r\n                                                <span className=\"p-2\">LOTES SEPARADOS</span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CPlano />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <CFooter rutatmp='./../../' />\r\n\r\n                <Fragment>\r\n                    <Modal size=\"xl\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\" style={{ backgroundColor: 'rgba(255,255,255,0.5)' }}>\r\n                        <Modal.Header closeButton style={{ backgroundColor: 'red' }}>\r\n                            <h3 className='text-light'> Estado del lote:</h3>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ height: '80vh', borderLeft: '2px solid #F5B7B1', borderRight: '2px solid #F5B7B1', borderBottom: '2px solid #F5B7B1', borderBottomRightRadius: '5px', borderBottomLeftRadius: '5px' }}>\r\n\r\n                            <div className=\"row fw-bold text-center \">\r\n                                <div className=\"col\">\r\n                                    Manzana:\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    Lote:\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    Área del Lote:\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row text-center text-success\">\r\n                                <div className=\"col\">\r\n                                    {formData.manzana}\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    {formData.lote}\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    m<br />\r\n                                    m<br />\r\n                                    Dimensión 1: {formData.dimension1}<br />\r\n                                    Dimensión 2: {formData.dimension2}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"my-4 bg-red border-3\" />\r\n                            <div className=\"row \">\r\n                                <div className=\"col-md-6 text-left\">\r\n                                    <div className=\"row text-left\">\r\n                                        <div className=\"col-md-6 fw-bold\">Precio Base:</div>\r\n                                        <div className=\"col-md-6\">10800</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 fw-bold\">Descuento:</div>\r\n                                        <div className=\"col-md-6 \">450 %</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 fw-bold\">Precio Descuento:</div>\r\n                                        <div className=\"col-md-6\">s/ 180</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 fw-bold\">Inicial:</div>\r\n                                        <div className=\"col-md-6\">s/ 1000</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 fw-bold\">Saldo Restante:</div>\r\n                                        <div className=\"col-md-6\">s/ 19,600.00</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"my-4 bg-red border-3\" />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 fw-bold pb-3\">Financiamiento:</div>\r\n                                <div className=\"col-md-12 \">\r\n                                    <table className=\"table table-borderless text-center table-bordered\">\r\n                                        <thead className=\"table-secondary\">\r\n                                            <tr>\r\n                                                <th>N° Cuotas</th>\r\n                                                <th>Cuota Mensual</th>\r\n                                                <th>Interés Anual</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"\">\r\n                                            <tr className=\"border-0 border-secondary\">\r\n                                                <td>12</td>\r\n                                                <td>s/ 1600</td>\r\n                                                <td>$12 %</td>\r\n                                            </tr>\r\n                                            <tr className=\"border-0 border-secondary\">\r\n                                                <td>18</td>\r\n                                                <td>s/ 1642</td>\r\n                                                <td>14720 %</td>\r\n                                            </tr>\r\n                                            <tr className=\"border-0 border-secondary\">\r\n                                                <td>24</td>\r\n                                                <td>s/ 7651</td>\r\n                                                <td>16%</td>\r\n                                            </tr>\r\n                                            <tr className=\"border-0 border-bottom border-secondary \">\r\n                                                <td>36</td>\r\n                                                <td>s/1500</td>\r\n                                                <td>18 %</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </Fragment>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\timeline.tsx",["874"],[],"\"use client\"\r\nimport CFooter from '../components/estructura/footer'\r\nimport CFormulario from './componentes/formulario'\r\nimport CTop from './componentes/top'\r\nimport CAdorno from './componentes/adorno'\r\nimport { Accordion, Card, Row } from 'react-bootstrap'\r\nimport VSanuncio from './componentes/anuncio'\r\nimport { useEffect, useState } from 'react'\r\nexport default function EstructuraInicio() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n\r\n    fetch('http://localhost:3001/pgtimeline')\r\n      .then(response => response.json())\r\n      .then(data => setDatos(data))\r\n      .catch(error => console.error(\"Aquí hay un error\", error));\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <Row className='bg-white m-0'>\r\n      <Card className='p-0'>\r\n        <CTop selMenu=\"timeline\" pagenav=\"./../\" />\r\n        <div className=\"x_content\" >\r\n          <CAdorno />\r\n          <div className=\"container\">\r\n            <div className=\"row g-5\">\r\n              <div className=\"col-md-7 col-lg-8\">\r\n                <VSanuncio />\r\n                <div className='container'>\r\n                  <div className='row'>\r\n                    {datos.map((fila, index) => (\r\n                      <Accordion>\r\n                        <Accordion.Item eventKey=\"0\" style={{ border: 'none', marginBottom: '10px' }}>\r\n                          <Accordion.Header style={{ border: '1px solid lightgray', borderRadius: '7px', paddingTop: '3px', paddingBottom: '3px' }}>\r\n                            <strong> {fila.title}</strong>\r\n                          </Accordion.Header>\r\n                          <Accordion.Body>\r\n                            <div className='row'>\r\n                              {fila.content && (\r\n                                <div dangerouslySetInnerHTML={{ __html: fila.content }} className='image-row'/>\r\n                              )}\r\n                            </div>\r\n                          </Accordion.Body>\r\n                        </Accordion.Item>\r\n                      </Accordion>\r\n                    ))}\r\n                  </div>\r\n              \r\n                </div>\r\n              </div>\r\n              <CFormulario />\r\n              <br />\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n        <CFooter rutatmp='./../../' />\r\n      </Card>\r\n    </Row>\r\n\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan\\ubicacion.tsx",["875"],[],"\"use client\"\r\nimport CFooter from '../components/estructura/footer'\r\nimport CFormulario from './componentes/formulario'\r\nimport CTop from './componentes/top'\r\nimport CAdorno from './componentes/adorno'\r\nimport { Card, Row } from 'react-bootstrap'\r\nimport CUbicacion from './componentes/ubicacion'\r\nimport { useEffect, useState } from 'react'\r\nexport default function EstructuraInicio() {\r\n  const [datos, setDatos] = useState([]);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/pgubicaciongb')\r\n      .then(response => response.json())\r\n      .then(data => setDatos(data))\r\n      .catch(error => console.error('Error al obtener datos:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row className='bg-white m-0'>\r\n        <Card className='p-0'>\r\n          <CTop selMenu=\"ubicacion\" pagenav=\"./../\" />\r\n          <div className=\"x_content\" >\r\n            <CAdorno />\r\n            <div className=\"container\">\r\n              <div className=\"row g-5\">\r\n                {datos.map((fila, index) => (\r\n                  <div className=\"col-md-7 col-lg-8\">\r\n                    <h2 className=\"fw-bold cProyect2\">{fila.titulo}</h2>\r\n                    <div className=\"container mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"d-grid gap-2 d-md-block pb-3\">\r\n                          <a href={fila.ruta1} target='_blank'> <button className=\"btn bgProyect2 text-light fw-bold\" type=\"button\">{fila.boton1}</button></a>&nbsp;\r\n                          <a href={fila.ruta2} target='_blank'><button className=\"btn btn-secondary fw-bold\" type=\"button\">{fila.boton2}</button></a>\r\n                        </div>\r\n                        <iframe src={fila.iframe} width=\"600\" height=\"450\" loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <CFormulario />\r\n                <hr className=\"my-4 cProyect2 border-3\" />\r\n                <CUbicacion />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CFooter rutatmp='./../../' />\r\n        </Card>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\villasipan.tsx",["876","877","878","879","880"],[],"import { useEffect, useState } from 'react'\r\nimport CFooter from './components/estructura/footer'\r\nimport CFormulario from './components/estructura/formulario'\r\nimport CTop from './components/estructura/top'\r\nimport CAnuncio from './components/estructura/anuncio'\r\nimport CAdorno from './components/estructura/adorno'\r\nimport type { Metadata } from 'next'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport React from 'react'\r\nimport { Border } from 'react-bootstrap-icons'\r\nimport Videosinfo from './components/estructura/videosinfo'\r\nexport const metadata: Metadata = {\r\n  title: 'Compratulote.pe : Plantilla',\r\n  description: 'Plantilla inicicial',\r\n}\r\nexport default function villasipan() {\r\n  const [datos, setDatos] = useState([]);\r\n  const [banners, setBanners] = useState('');\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n  const sliderRef = React.useRef(null);\r\n  const nextSlide = () => {\r\n    sliderRef.current.slickNext();\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    sliderRef.current.slickPrev();\r\n  };\r\n  useEffect(() => {\r\n    const verificador = window.location.pathname.split('/');\r\n    const rptAPI = verificador[verificador.length - 1];\r\n    fetch('http://localhost:3001/pgvillasipan')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const filtrado = data.filter(fila => fila.categoria === rptAPI);\r\n        setDatos(filtrado);\r\n        setBanners(rptAPI);\r\n      })\r\n      .catch(error => console.error(\"Se encontró un error\"))\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className='bg-white m-0'>\r\n       <Card className='p-0'>\r\n              <CTop selMenu=\"index\" pagenav=\"./\" />\r\n              <CAdorno />\r\n              <div className='m-0'>\r\n                <div className=\"container\" >\r\n                  <div className=\"row g-5 mb-3 py-4\">\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n                      <CAnuncio />\r\n                      <div className=\"container text-center\">\r\n                        <div className=\"row row-cols-2 row-cols-lg-5 g-2 g-lg-3\">\r\n                          {datos.map((fila, index) => (\r\n                            <div className=\"col\" key={index}>\r\n                              <div className=\"p-3 rounded-4 custom-border-info\" style={{border:'2px solid #637391'}}>\r\n                                <img src={fila.imagen} alt='imagen' className=\"img-fluid custom-img-info\" />\r\n                              </div>\r\n                              <p className=\"py-2 fw-bold\" style={{color:'#637391'}}>{fila.titulo}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <CFormulario />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Videosinfo />\r\n              <CFooter rutatmp='./../../' />\r\n           </Card>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\_app.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\pages\\_document.js",[],[],"D:\\PROYECTO_TEST\\compratulote-garzablanca\\components\\bootstrap\\DotBadge.js",[],[],{"ruleId":"881","severity":1,"message":"882","line":36,"column":17,"nodeType":"883","endLine":36,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":36,"column":17,"nodeType":"883","endLine":36,"endColumn":71},{"ruleId":"881","severity":1,"message":"882","line":39,"column":17,"nodeType":"883","endLine":39,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":39,"column":17,"nodeType":"883","endLine":39,"endColumn":71},{"ruleId":"881","severity":1,"message":"882","line":42,"column":17,"nodeType":"883","endLine":42,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":42,"column":17,"nodeType":"883","endLine":42,"endColumn":71},{"ruleId":"881","severity":1,"message":"882","line":45,"column":17,"nodeType":"883","endLine":45,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":45,"column":17,"nodeType":"883","endLine":45,"endColumn":71},{"ruleId":"881","severity":1,"message":"882","line":48,"column":17,"nodeType":"883","endLine":48,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":48,"column":17,"nodeType":"883","endLine":48,"endColumn":71},{"ruleId":"881","severity":1,"message":"882","line":51,"column":17,"nodeType":"883","endLine":51,"endColumn":71},{"ruleId":"884","severity":1,"message":"885","line":51,"column":17,"nodeType":"883","endLine":51,"endColumn":71},{"ruleId":"886","severity":2,"message":"887","line":14,"column":23,"nodeType":"883","endLine":14,"endColumn":35},{"ruleId":"881","severity":1,"message":"882","line":15,"column":25,"nodeType":"883","endLine":15,"endColumn":88},{"ruleId":"884","severity":1,"message":"885","line":15,"column":25,"nodeType":"883","endLine":15,"endColumn":88},{"ruleId":"881","severity":1,"message":"882","line":27,"column":19,"nodeType":"883","endLine":27,"endColumn":89},{"ruleId":"881","severity":1,"message":"882","line":31,"column":19,"nodeType":"883","endLine":31,"endColumn":89},{"ruleId":"881","severity":1,"message":"882","line":33,"column":25,"nodeType":"883","endLine":33,"endColumn":99},{"ruleId":"881","severity":1,"message":"882","line":11,"column":123,"nodeType":"883","endLine":11,"endColumn":183},{"ruleId":"884","severity":1,"message":"885","line":11,"column":123,"nodeType":"883","endLine":11,"endColumn":183},{"ruleId":"881","severity":1,"message":"882","line":27,"column":33,"nodeType":"883","endLine":27,"endColumn":91},{"ruleId":"881","severity":1,"message":"882","line":45,"column":37,"nodeType":"883","endLine":45,"endColumn":103},{"ruleId":"886","severity":2,"message":"887","line":11,"column":13,"nodeType":"883","endLine":11,"endColumn":25},{"ruleId":"881","severity":1,"message":"882","line":19,"column":114,"nodeType":"883","endLine":19,"endColumn":167},{"ruleId":"884","severity":1,"message":"885","line":19,"column":114,"nodeType":"883","endLine":19,"endColumn":167},{"ruleId":"886","severity":2,"message":"887","line":12,"column":25,"nodeType":"883","endLine":12,"endColumn":50},{"ruleId":"881","severity":1,"message":"882","line":12,"column":50,"nodeType":"883","endLine":12,"endColumn":74},{"ruleId":"884","severity":1,"message":"885","line":12,"column":50,"nodeType":"883","endLine":12,"endColumn":74},{"ruleId":"881","severity":1,"message":"882","line":9,"column":33,"nodeType":"883","endLine":9,"endColumn":112},{"ruleId":"884","severity":1,"message":"885","line":9,"column":33,"nodeType":"883","endLine":9,"endColumn":112},{"ruleId":"881","severity":1,"message":"882","line":29,"column":21,"nodeType":"883","endLine":29,"endColumn":69},{"ruleId":"884","severity":1,"message":"885","line":29,"column":21,"nodeType":"883","endLine":29,"endColumn":69},{"ruleId":"881","severity":1,"message":"882","line":22,"column":19,"nodeType":"883","endLine":22,"endColumn":69},{"ruleId":"884","severity":1,"message":"885","line":22,"column":19,"nodeType":"883","endLine":22,"endColumn":69},{"ruleId":"881","severity":1,"message":"882","line":28,"column":18,"nodeType":"883","endLine":28,"endColumn":65},{"ruleId":"884","severity":1,"message":"885","line":28,"column":18,"nodeType":"883","endLine":28,"endColumn":65},{"ruleId":"881","severity":1,"message":"882","line":59,"column":13,"nodeType":"883","endLine":59,"endColumn":99},{"ruleId":"888","severity":1,"message":"889","line":24,"column":8,"nodeType":"890","endLine":24,"endColumn":10,"suggestions":"891"},{"ruleId":"881","severity":1,"message":"882","line":5,"column":17,"nodeType":"883","endLine":5,"endColumn":115},{"ruleId":"881","severity":1,"message":"882","line":26,"column":68,"nodeType":"883","endLine":26,"endColumn":122},{"ruleId":"884","severity":1,"message":"885","line":26,"column":68,"nodeType":"883","endLine":26,"endColumn":122},{"ruleId":"881","severity":1,"message":"882","line":27,"column":68,"nodeType":"883","endLine":27,"endColumn":122},{"ruleId":"884","severity":1,"message":"885","line":27,"column":68,"nodeType":"883","endLine":27,"endColumn":122},{"ruleId":"881","severity":1,"message":"882","line":28,"column":68,"nodeType":"883","endLine":28,"endColumn":122},{"ruleId":"884","severity":1,"message":"885","line":28,"column":68,"nodeType":"883","endLine":28,"endColumn":122},{"ruleId":"881","severity":1,"message":"882","line":29,"column":68,"nodeType":"883","endLine":29,"endColumn":122},{"ruleId":"884","severity":1,"message":"885","line":29,"column":68,"nodeType":"883","endLine":29,"endColumn":122},{"ruleId":"881","severity":1,"message":"882","line":7,"column":17,"nodeType":"883","endLine":7,"endColumn":115},{"ruleId":"881","severity":1,"message":"882","line":30,"column":76,"nodeType":"883","endLine":30,"endColumn":131},{"ruleId":"884","severity":1,"message":"885","line":30,"column":76,"nodeType":"883","endLine":30,"endColumn":131},{"ruleId":"881","severity":1,"message":"882","line":31,"column":76,"nodeType":"883","endLine":31,"endColumn":131},{"ruleId":"884","severity":1,"message":"885","line":31,"column":76,"nodeType":"883","endLine":31,"endColumn":131},{"ruleId":"881","severity":1,"message":"882","line":32,"column":76,"nodeType":"883","endLine":32,"endColumn":131},{"ruleId":"884","severity":1,"message":"885","line":32,"column":76,"nodeType":"883","endLine":32,"endColumn":131},{"ruleId":"881","severity":1,"message":"882","line":33,"column":76,"nodeType":"883","endLine":33,"endColumn":131},{"ruleId":"884","severity":1,"message":"885","line":33,"column":76,"nodeType":"883","endLine":33,"endColumn":131},{"ruleId":"881","severity":1,"message":"882","line":28,"column":41,"nodeType":"883","endLine":28,"endColumn":102},{"ruleId":"884","severity":1,"message":"885","line":28,"column":41,"nodeType":"883","endLine":28,"endColumn":102},{"ruleId":"881","severity":1,"message":"882","line":36,"column":28,"nodeType":"883","endLine":36,"endColumn":98},{"ruleId":"881","severity":1,"message":"882","line":17,"column":13,"nodeType":"883","endLine":17,"endColumn":79},{"ruleId":"884","severity":1,"message":"885","line":17,"column":13,"nodeType":"883","endLine":17,"endColumn":79},{"ruleId":"881","severity":1,"message":"882","line":20,"column":13,"nodeType":"883","endLine":20,"endColumn":79},{"ruleId":"884","severity":1,"message":"885","line":20,"column":13,"nodeType":"883","endLine":20,"endColumn":79},{"ruleId":"881","severity":1,"message":"882","line":23,"column":13,"nodeType":"883","endLine":23,"endColumn":79},{"ruleId":"884","severity":1,"message":"885","line":23,"column":13,"nodeType":"883","endLine":23,"endColumn":79},{"ruleId":"881","severity":1,"message":"882","line":53,"column":13,"nodeType":"883","endLine":53,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":53,"column":13,"nodeType":"883","endLine":53,"endColumn":67},{"ruleId":"881","severity":1,"message":"882","line":56,"column":13,"nodeType":"883","endLine":56,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":56,"column":13,"nodeType":"883","endLine":56,"endColumn":67},{"ruleId":"881","severity":1,"message":"882","line":59,"column":13,"nodeType":"883","endLine":59,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":59,"column":13,"nodeType":"883","endLine":59,"endColumn":67},{"ruleId":"881","severity":1,"message":"882","line":62,"column":13,"nodeType":"883","endLine":62,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":62,"column":13,"nodeType":"883","endLine":62,"endColumn":67},{"ruleId":"881","severity":1,"message":"882","line":65,"column":13,"nodeType":"883","endLine":65,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":65,"column":13,"nodeType":"883","endLine":65,"endColumn":67},{"ruleId":"881","severity":1,"message":"882","line":68,"column":13,"nodeType":"883","endLine":68,"endColumn":67},{"ruleId":"884","severity":1,"message":"885","line":68,"column":13,"nodeType":"883","endLine":68,"endColumn":67},{"ruleId":"886","severity":2,"message":"887","line":14,"column":15,"nodeType":"883","endLine":14,"endColumn":40},{"ruleId":"881","severity":1,"message":"882","line":14,"column":40,"nodeType":"883","endLine":14,"endColumn":64},{"ruleId":"884","severity":1,"message":"885","line":14,"column":40,"nodeType":"883","endLine":14,"endColumn":64},{"ruleId":"886","severity":2,"message":"887","line":14,"column":15,"nodeType":"883","endLine":14,"endColumn":40},{"ruleId":"881","severity":1,"message":"882","line":14,"column":40,"nodeType":"883","endLine":14,"endColumn":64},{"ruleId":"884","severity":1,"message":"885","line":14,"column":40,"nodeType":"883","endLine":14,"endColumn":64},{"ruleId":"881","severity":1,"message":"882","line":53,"column":45,"nodeType":"883","endLine":53,"endColumn":109},{"ruleId":"892","severity":2,"message":"893","line":10,"column":47,"nodeType":"894","endLine":10,"endColumn":55},{"ruleId":"892","severity":2,"message":"893","line":9,"column":31,"nodeType":"894","endLine":9,"endColumn":39},{"ruleId":"892","severity":2,"message":"893","line":10,"column":33,"nodeType":"894","endLine":10,"endColumn":41},{"ruleId":"892","severity":2,"message":"893","line":11,"column":41,"nodeType":"894","endLine":11,"endColumn":49},{"ruleId":"892","severity":2,"message":"893","line":12,"column":41,"nodeType":"894","endLine":12,"endColumn":49},{"ruleId":"892","severity":2,"message":"893","line":13,"column":41,"nodeType":"894","endLine":13,"endColumn":49},{"ruleId":"892","severity":2,"message":"893","line":14,"column":63,"nodeType":"894","endLine":14,"endColumn":71},{"ruleId":"892","severity":2,"message":"893","line":15,"column":37,"nodeType":"894","endLine":15,"endColumn":45},{"ruleId":"892","severity":2,"message":"895","line":33,"column":5,"nodeType":"894","endLine":33,"endColumn":14},{"ruleId":"881","severity":1,"message":"882","line":179,"column":49,"nodeType":"883","endLine":179,"endColumn":113},{"ruleId":"881","severity":1,"message":"882","line":71,"column":41,"nodeType":"883","endLine":71,"endColumn":109},{"ruleId":"896","severity":2,"message":"897","line":112,"column":25,"nodeType":"898","messageId":"899","endLine":143,"endColumn":32},{"ruleId":"881","severity":1,"message":"882","line":164,"column":65,"nodeType":"883","endLine":164,"endColumn":139},{"ruleId":"881","severity":1,"message":"882","line":168,"column":65,"nodeType":"883","endLine":168,"endColumn":140},{"ruleId":"892","severity":2,"message":"900","line":11,"column":47,"nodeType":"894","endLine":11,"endColumn":55},{"ruleId":"892","severity":2,"message":"900","line":17,"column":37,"nodeType":"894","endLine":17,"endColumn":45},{"ruleId":"896","severity":2,"message":"897","line":112,"column":25,"nodeType":"898","messageId":"899","endLine":143,"endColumn":32},{"ruleId":"881","severity":1,"message":"882","line":163,"column":65,"nodeType":"883","endLine":163,"endColumn":139},{"ruleId":"881","severity":1,"message":"882","line":167,"column":65,"nodeType":"883","endLine":167,"endColumn":140},{"ruleId":"892","severity":2,"message":"900","line":11,"column":47,"nodeType":"894","endLine":11,"endColumn":55},{"ruleId":"892","severity":2,"message":"900","line":17,"column":37,"nodeType":"894","endLine":17,"endColumn":45},{"ruleId":"881","severity":1,"message":"882","line":198,"column":53,"nodeType":"883","endLine":198,"endColumn":104},{"ruleId":"884","severity":1,"message":"885","line":198,"column":53,"nodeType":"883","endLine":198,"endColumn":104},{"ruleId":"881","severity":1,"message":"882","line":189,"column":73,"nodeType":"883","endLine":189,"endColumn":139},{"ruleId":"881","severity":1,"message":"882","line":198,"column":53,"nodeType":"883","endLine":198,"endColumn":104},{"ruleId":"884","severity":1,"message":"885","line":198,"column":53,"nodeType":"883","endLine":198,"endColumn":104},{"ruleId":"881","severity":1,"message":"882","line":188,"column":81,"nodeType":"883","endLine":188,"endColumn":147},{"ruleId":"892","severity":2,"message":"901","line":10,"column":31,"nodeType":"894","endLine":10,"endColumn":39},{"ruleId":"892","severity":2,"message":"901","line":11,"column":33,"nodeType":"894","endLine":11,"endColumn":41},{"ruleId":"892","severity":2,"message":"901","line":12,"column":41,"nodeType":"894","endLine":12,"endColumn":49},{"ruleId":"892","severity":2,"message":"901","line":13,"column":41,"nodeType":"894","endLine":13,"endColumn":49},{"ruleId":"892","severity":2,"message":"901","line":14,"column":41,"nodeType":"894","endLine":14,"endColumn":49},{"ruleId":"892","severity":2,"message":"901","line":15,"column":35,"nodeType":"894","endLine":15,"endColumn":43},{"ruleId":"892","severity":2,"message":"901","line":16,"column":37,"nodeType":"894","endLine":16,"endColumn":45},{"ruleId":"892","severity":2,"message":"902","line":31,"column":5,"nodeType":"894","endLine":31,"endColumn":14},{"ruleId":"881","severity":1,"message":"882","line":176,"column":53,"nodeType":"883","endLine":176,"endColumn":111},{"ruleId":"892","severity":2,"message":"903","line":9,"column":31,"nodeType":"894","endLine":9,"endColumn":39},{"ruleId":"892","severity":2,"message":"903","line":10,"column":33,"nodeType":"894","endLine":10,"endColumn":41},{"ruleId":"892","severity":2,"message":"903","line":11,"column":41,"nodeType":"894","endLine":11,"endColumn":49},{"ruleId":"892","severity":2,"message":"903","line":12,"column":41,"nodeType":"894","endLine":12,"endColumn":49},{"ruleId":"892","severity":2,"message":"903","line":13,"column":41,"nodeType":"894","endLine":13,"endColumn":49},{"ruleId":"892","severity":2,"message":"903","line":14,"column":35,"nodeType":"894","endLine":14,"endColumn":43},{"ruleId":"892","severity":2,"message":"903","line":15,"column":37,"nodeType":"894","endLine":15,"endColumn":45},{"ruleId":"892","severity":2,"message":"904","line":30,"column":5,"nodeType":"894","endLine":30,"endColumn":14},{"ruleId":"881","severity":1,"message":"882","line":171,"column":53,"nodeType":"883","endLine":171,"endColumn":128},{"ruleId":"892","severity":2,"message":"905","line":7,"column":47,"nodeType":"894","endLine":7,"endColumn":55},{"ruleId":"892","severity":2,"message":"905","line":13,"column":31,"nodeType":"894","endLine":13,"endColumn":39},{"ruleId":"892","severity":2,"message":"905","line":14,"column":33,"nodeType":"894","endLine":14,"endColumn":41},{"ruleId":"892","severity":2,"message":"905","line":15,"column":41,"nodeType":"894","endLine":15,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":16,"column":41,"nodeType":"894","endLine":16,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":17,"column":41,"nodeType":"894","endLine":17,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":18,"column":37,"nodeType":"894","endLine":18,"endColumn":45},{"ruleId":"892","severity":2,"message":"906","line":38,"column":5,"nodeType":"894","endLine":38,"endColumn":14},{"ruleId":"892","severity":2,"message":"905","line":8,"column":47,"nodeType":"894","endLine":8,"endColumn":55},{"ruleId":"892","severity":2,"message":"905","line":13,"column":31,"nodeType":"894","endLine":13,"endColumn":39},{"ruleId":"892","severity":2,"message":"905","line":14,"column":33,"nodeType":"894","endLine":14,"endColumn":41},{"ruleId":"892","severity":2,"message":"905","line":15,"column":41,"nodeType":"894","endLine":15,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":16,"column":41,"nodeType":"894","endLine":16,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":17,"column":41,"nodeType":"894","endLine":17,"endColumn":49},{"ruleId":"892","severity":2,"message":"905","line":18,"column":37,"nodeType":"894","endLine":18,"endColumn":45},{"ruleId":"892","severity":2,"message":"906","line":38,"column":5,"nodeType":"894","endLine":38,"endColumn":14},{"ruleId":"896","severity":2,"message":"897","line":119,"column":25,"nodeType":"898","messageId":"899","endLine":138,"endColumn":32},{"ruleId":"896","severity":2,"message":"897","line":112,"column":25,"nodeType":"898","messageId":"899","endLine":143,"endColumn":32},{"ruleId":"896","severity":2,"message":"897","line":119,"column":25,"nodeType":"898","messageId":"899","endLine":138,"endColumn":32},{"ruleId":"896","severity":2,"message":"897","line":112,"column":25,"nodeType":"898","messageId":"899","endLine":142,"endColumn":32},{"ruleId":"892","severity":2,"message":"907","line":8,"column":31,"nodeType":"894","endLine":8,"endColumn":39},{"ruleId":"892","severity":2,"message":"907","line":9,"column":33,"nodeType":"894","endLine":9,"endColumn":41},{"ruleId":"892","severity":2,"message":"907","line":10,"column":39,"nodeType":"894","endLine":10,"endColumn":47},{"ruleId":"892","severity":2,"message":"907","line":11,"column":41,"nodeType":"894","endLine":11,"endColumn":49},{"ruleId":"892","severity":2,"message":"907","line":12,"column":41,"nodeType":"894","endLine":12,"endColumn":49},{"ruleId":"892","severity":2,"message":"907","line":13,"column":41,"nodeType":"894","endLine":13,"endColumn":49},{"ruleId":"892","severity":2,"message":"907","line":14,"column":37,"nodeType":"894","endLine":14,"endColumn":45},{"ruleId":"892","severity":2,"message":"908","line":31,"column":5,"nodeType":"894","endLine":31,"endColumn":14},{"ruleId":"896","severity":2,"message":"897","line":237,"column":53,"nodeType":"898","messageId":"899","endLine":250,"endColumn":58},{"ruleId":"896","severity":2,"message":"897","line":166,"column":33,"nodeType":"898","messageId":"899","endLine":208,"endColumn":39},{"ruleId":"892","severity":2,"message":"909","line":11,"column":47,"nodeType":"894","endLine":11,"endColumn":55},{"ruleId":"892","severity":2,"message":"909","line":17,"column":37,"nodeType":"894","endLine":17,"endColumn":45},{"ruleId":"896","severity":2,"message":"897","line":215,"column":53,"nodeType":"898","messageId":"899","endLine":228,"endColumn":58},{"ruleId":"896","severity":2,"message":"897","line":166,"column":33,"nodeType":"898","messageId":"899","endLine":208,"endColumn":39},{"ruleId":"892","severity":2,"message":"909","line":10,"column":47,"nodeType":"894","endLine":10,"endColumn":55},{"ruleId":"892","severity":2,"message":"909","line":16,"column":37,"nodeType":"894","endLine":16,"endColumn":45},{"ruleId":"881","severity":1,"message":"882","line":48,"column":33,"nodeType":"883","endLine":48,"endColumn":109},{"ruleId":"881","severity":1,"message":"882","line":65,"column":33,"nodeType":"883","endLine":65,"endColumn":109},{"ruleId":"881","severity":1,"message":"882","line":65,"column":37,"nodeType":"883","endLine":65,"endColumn":79},{"ruleId":"881","severity":1,"message":"882","line":86,"column":37,"nodeType":"883","endLine":86,"endColumn":79},{"ruleId":"881","severity":1,"message":"882","line":95,"column":29,"nodeType":"883","endLine":95,"endColumn":249},{"ruleId":"881","severity":1,"message":"882","line":179,"column":57,"nodeType":"883","endLine":179,"endColumn":92},{"ruleId":"884","severity":1,"message":"885","line":179,"column":57,"nodeType":"883","endLine":179,"endColumn":92},{"ruleId":"881","severity":1,"message":"882","line":342,"column":49,"nodeType":"883","endLine":342,"endColumn":108},{"ruleId":"881","severity":1,"message":"882","line":345,"column":49,"nodeType":"883","endLine":345,"endColumn":108},{"ruleId":"888","severity":1,"message":"910","line":100,"column":8,"nodeType":"890","endLine":100,"endColumn":35,"suggestions":"911"},{"ruleId":"888","severity":1,"message":"912","line":133,"column":8,"nodeType":"890","endLine":133,"endColumn":15,"suggestions":"913"},{"ruleId":"881","severity":1,"message":"882","line":51,"column":37,"nodeType":"883","endLine":51,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":54,"column":37,"nodeType":"883","endLine":54,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":57,"column":37,"nodeType":"883","endLine":57,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":60,"column":37,"nodeType":"883","endLine":60,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":63,"column":37,"nodeType":"883","endLine":63,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":66,"column":37,"nodeType":"883","endLine":66,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":69,"column":37,"nodeType":"883","endLine":69,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":72,"column":37,"nodeType":"883","endLine":72,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":75,"column":37,"nodeType":"883","endLine":75,"endColumn":140},{"ruleId":"881","severity":1,"message":"882","line":82,"column":29,"nodeType":"883","endLine":83,"endColumn":90},{"ruleId":"881","severity":1,"message":"882","line":111,"column":25,"nodeType":"883","endLine":111,"endColumn":97},{"ruleId":"884","severity":1,"message":"885","line":111,"column":25,"nodeType":"883","endLine":111,"endColumn":97},{"ruleId":"881","severity":1,"message":"882","line":115,"column":55,"nodeType":"883","endLine":115,"endColumn":107},{"ruleId":"881","severity":1,"message":"882","line":116,"column":55,"nodeType":"883","endLine":116,"endColumn":107},{"ruleId":"881","severity":1,"message":"882","line":117,"column":55,"nodeType":"883","endLine":117,"endColumn":107},{"ruleId":"881","severity":1,"message":"882","line":118,"column":55,"nodeType":"883","endLine":118,"endColumn":107},{"ruleId":"881","severity":1,"message":"882","line":149,"column":25,"nodeType":"883","endLine":149,"endColumn":88},{"ruleId":"884","severity":1,"message":"885","line":149,"column":25,"nodeType":"883","endLine":149,"endColumn":88},{"ruleId":"881","severity":1,"message":"882","line":28,"column":19,"nodeType":"883","endLine":28,"endColumn":93},{"ruleId":"881","severity":1,"message":"882","line":32,"column":19,"nodeType":"883","endLine":32,"endColumn":94},{"ruleId":"881","severity":1,"message":"882","line":33,"column":25,"nodeType":"883","endLine":33,"endColumn":89},{"ruleId":"881","severity":1,"message":"882","line":26,"column":33,"nodeType":"883","endLine":26,"endColumn":108},{"ruleId":"896","severity":2,"message":"897","line":79,"column":37,"nodeType":"898","messageId":"899","endLine":92,"endColumn":42},{"ruleId":"881","severity":1,"message":"882","line":45,"column":37,"nodeType":"883","endLine":45,"endColumn":103},{"ruleId":"881","severity":1,"message":"882","line":47,"column":29,"nodeType":"883","endLine":47,"endColumn":105},{"ruleId":"888","severity":1,"message":"910","line":88,"column":8,"nodeType":"890","endLine":88,"endColumn":35,"suggestions":"914"},{"ruleId":"888","severity":1,"message":"912","line":121,"column":8,"nodeType":"890","endLine":121,"endColumn":15,"suggestions":"915"},{"ruleId":"896","severity":2,"message":"897","line":36,"column":23,"nodeType":"898","messageId":"899","endLine":49,"endColumn":35},{"ruleId":"896","severity":2,"message":"897","line":28,"column":19,"nodeType":"898","messageId":"899","endLine":39,"endColumn":25},{"ruleId":"892","severity":2,"message":"916","line":20,"column":29,"nodeType":"894","endLine":20,"endColumn":37},{"ruleId":"892","severity":2,"message":"916","line":21,"column":33,"nodeType":"894","endLine":21,"endColumn":41},{"ruleId":"892","severity":2,"message":"917","line":29,"column":21,"nodeType":"918","endLine":29,"endColumn":33},{"ruleId":"892","severity":2,"message":"919","line":37,"column":3,"nodeType":"894","endLine":37,"endColumn":12},{"ruleId":"881","severity":1,"message":"882","line":65,"column":33,"nodeType":"883","endLine":65,"endColumn":109},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@next/next/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tipo'. Either include it or remove the dependency array.","ArrayExpression",["920"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"slider\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook \"useEffect\" is called in function \"slider\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","missingIterKey","React Hook \"useState\" is called in function \"especificaciones\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"navbar\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"navbar\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"navbarvs\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"navbarvs\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"plano\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"plano\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"crudubicacion\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"crudubicacion\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"ubicacion\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has missing dependencies: 'drawAllAreas' and 'drawHighlight'. Either include them or remove the dependency array.",["921"],"React Hook useEffect has a missing dependency: 'drawAllAreas'. Either include it or remove the dependency array.",["922"],["923"],["924"],"React Hook \"useState\" is called in function \"villasipan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"React.useRef\" is called in function \"villasipan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","MemberExpression","React Hook \"useEffect\" is called in function \"villasipan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"927","fix":"931"},{"desc":"929","fix":"932"},"Update the dependencies array to be: [tipo]",{"range":"933","text":"934"},"Update the dependencies array to be: [selectedArea, loadedImage, drawAllAreas, drawHighlight]",{"range":"935","text":"936"},"Update the dependencies array to be: [areas, drawAllAreas]",{"range":"937","text":"938"},{"range":"939","text":"936"},{"range":"940","text":"938"},[1256,1258],"[tipo]",[3815,3842],"[selectedArea, loadedImage, drawAllAreas, drawHighlight]",[5075,5082],"[areas, drawAllAreas]",[3143,3170],[4402,4409]]